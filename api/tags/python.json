{"name":"python","slug":"python","count":11,"postlist":[{"title":"0-1多背包带约束问题（MKAR）","uid":"075a9a10b3dedbd22ddf3f7a1ad6394e","slug":"0-1多背包带约束问题（MKAR）","date":"2022-10-22T13:17:44.000Z","updated":"2022-10-22T14:03:17.886Z","comments":true,"path":"api/articles/0-1多背包带约束问题（MKAR）.json","keywords":null,"cover":null,"text":"本文其实与智能算法无关，这是最优化课程的一个小作业，之所以放在智能算法一栏，是因为这个问题的大部分解法都是智能算法。下面出场的是背包问题的一个变种——带约束的多背包问题，这个问题的精确算法复杂度极高，所以一般退而求其次寻找拥有固定近似比的近似算法，本文求解采取的则是一种基于DP动...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[{"name":"智能算法","slug":"智能算法","count":4,"path":"api/categories/智能算法.json"}],"tags":[{"name":"python","slug":"python","count":11,"path":"api/tags/python.json"},{"name":"数学煎馍","slug":"数学煎馍","count":4,"path":"api/tags/数学煎馍.json"},{"name":"动态规划","slug":"动态规划","count":5,"path":"api/tags/动态规划.json"}],"author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}}},{"title":"<00> REG2NFA","uid":"6fcdc9dd323137269ea9dcabb8b1efc8","slug":"00-REG2NFA","date":"2022-05-09T15:49:12.000Z","updated":"2022-05-17T07:57:50.980Z","comments":true,"path":"api/articles/00-REG2NFA.json","keywords":null,"cover":[],"text":"本文借助transitions库基于逆波兰表示法（Reverse Polish Notation，RPN）实现了正则表达式转NFA，并画出相关的状态转移图。 ∅ Transitions库介绍引用官网中的一句话“They say a good example is worth 10...","link":"","photos":[],"count_time":{"symbolsCount":"4.8k","symbolsTime":"4 mins."},"categories":[{"name":"编译原理","slug":"编译原理","count":7,"path":"api/categories/编译原理.json"}],"tags":[{"name":"python","slug":"python","count":11,"path":"api/tags/python.json"},{"name":"走码观花","slug":"走码观花","count":15,"path":"api/tags/走码观花.json"}],"author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}}},{"title":"<01> NFA2DFA","uid":"876685c2961fc61a4c5638eee32e520e","slug":"01-NFA2DFA","date":"2022-05-11T03:07:43.000Z","updated":"2022-05-17T07:57:35.663Z","comments":true,"path":"api/articles/01-NFA2DFA.json","keywords":null,"cover":[],"text":"本文借助Graphviz库实现了NFA转DFA，并输出DFA的状态转移图。 ∅ Graphviz库介绍你一定很疑惑我昨天刚介绍完Transitions库今天怎么就就换了一个绘制库。ummm…Transitions库其实更注重于状态机本身的实现，当你想用状态机来实现某些功能时，Tr...","link":"","photos":[],"count_time":{"symbolsCount":"4.2k","symbolsTime":"4 mins."},"categories":[{"name":"编译原理","slug":"编译原理","count":7,"path":"api/categories/编译原理.json"}],"tags":[{"name":"python","slug":"python","count":11,"path":"api/tags/python.json"},{"name":"走码观花","slug":"走码观花","count":15,"path":"api/tags/走码观花.json"}],"author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}}},{"title":"<10> NO Left Recursion","uid":"0ec694a906049225d6d529b78f724448","slug":"10-NO-Left-Recursion","date":"2022-05-17T07:58:36.000Z","updated":"2022-06-21T07:50:59.594Z","comments":true,"path":"api/articles/10-NO-Left-Recursion.json","keywords":null,"cover":[],"text":"本文介绍消除文法左递归的算法，并输出新文法产生式。 消除左递归在语法分析阶段是比较重要的一个过程，尤其在自顶向下的分析过程中，编译器会尝试各个推导式，如果存在左递归，那么推导过程将会用永无止境。 比较显式的左递归我们称之为直接左递归，比如说 其中表示非空的表达式，表示不以非终结符...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"编译原理","slug":"编译原理","count":7,"path":"api/categories/编译原理.json"}],"tags":[{"name":"python","slug":"python","count":11,"path":"api/tags/python.json"},{"name":"走码观花","slug":"走码观花","count":15,"path":"api/tags/走码观花.json"}],"author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}}},{"title":"<11> Left Factoring","uid":"1a8f64477679eeab68479d654eb4e8ee","slug":"11-Left-Factoring","date":"2022-06-06T15:29:06.000Z","updated":"2022-06-06T16:21:25.701Z","comments":true,"path":"api/articles/11-Left-Factoring.json","keywords":null,"cover":[],"text":"本文实现了一个较为简单的算法——文法的左公因子提取。umm其实也称不上是算法。 我们的目标非常明确，就是将文法产生式的左公因式都提出来，需要注意以下几点： 在一个产生式中需要提取范围最大的公因式，即拥有该左公因式的右部应该尽可能得多 提取左公因子之后会产生新的产生式，该产生式也可...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"编译原理","slug":"编译原理","count":7,"path":"api/categories/编译原理.json"}],"tags":[{"name":"python","slug":"python","count":11,"path":"api/tags/python.json"},{"name":"走码观花","slug":"走码观花","count":15,"path":"api/tags/走码观花.json"}],"author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}}},{"title":"Apply ANN in MNIST","uid":"27d8ddbd7db795b00aa745f14f40ef75","slug":"Apply-ANN-in-MNIST","date":"2022-05-20T03:44:06.000Z","updated":"2022-07-13T16:03:19.229Z","comments":true,"path":"api/articles/Apply-ANN-in-MNIST.json","keywords":null,"cover":null,"text":"看完了3Blue1Brown的神经网络三部曲，感觉眼睛明亮了，内心更通透了，手指控制不住地就开始跳动。 接下来请欣赏寿司神经网络——手写数字集MNIST登场！ import numpy as np import pandas as pd import joblib as jb 激...","link":"","photos":[],"count_time":{"symbolsCount":"4.7k","symbolsTime":"4 mins."},"categories":[{"name":"Machine Learning","slug":"Machine-Learning","count":3,"path":"api/categories/Machine-Learning.json"}],"tags":[{"name":"python","slug":"python","count":11,"path":"api/tags/python.json"},{"name":"走码观花","slug":"走码观花","count":15,"path":"api/tags/走码观花.json"},{"name":"ANN","slug":"ANN","count":1,"path":"api/tags/ANN.json"}],"author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}}},{"title":"Naive Bayes","uid":"430d590163d20d4eee403c80b7319692","slug":"Naive-Bayes","date":"2022-03-29T12:46:48.000Z","updated":"2022-05-26T15:30:18.996Z","comments":true,"path":"api/articles/Naive-Bayes.json","keywords":null,"cover":[],"text":"朴素贝叶斯是一个非常经典易懂的分类方法，其核心思想是上式即为概率论中的Bayes定理，描述了两个条件概率之间的关系，那么先让我们来回顾一下概率论的知识。 α Bayes’ theorem对于计算两个事件X和Y同时发生的概率，可以由Y发生的概率与Y已发生时会发生X的概率相乘得到，即...","link":"","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[{"name":"Machine Learning","slug":"Machine-Learning","count":3,"path":"api/categories/Machine-Learning.json"}],"tags":[{"name":"python","slug":"python","count":11,"path":"api/tags/python.json"},{"name":"走码观花","slug":"走码观花","count":15,"path":"api/tags/走码观花.json"}],"author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}}},{"title":"YOLOv5说明书","uid":"4eb946cc0edf20ceda9a686ce0927f5a","slug":"Yolov5说明书","date":"2022-05-07T03:54:21.000Z","updated":"2022-06-06T16:32:40.579Z","comments":true,"path":"api/articles/Yolov5说明书.json","keywords":null,"cover":[],"text":"YOLO 的全称是 You Only Look Once，指只需要浏览一次就可以识别出图中的物体的类别和位置。YOLOv5 是由 Ultralytics LLC 公司于 2020 年 5 月所提出，其图像推理速度最快达 0.007 s，即每秒可处理 140 帧，满足视频图像实时检...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"Machine Learning","slug":"Machine-Learning","count":3,"path":"api/categories/Machine-Learning.json"}],"tags":[{"name":"python","slug":"python","count":11,"path":"api/tags/python.json"},{"name":"走码观花","slug":"走码观花","count":15,"path":"api/tags/走码观花.json"}],"author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}}},{"title":"模拟退火","uid":"031d2c36fd739bf94778d5ddc84b6f38","slug":"模拟退火","date":"2022-08-28T05:33:08.000Z","updated":"2022-11-28T12:45:12.731Z","comments":true,"path":"api/articles/模拟退火.json","keywords":null,"cover":[],"text":"模拟退火算法，顾名思义，模拟晶体退火过程。晶体在加热后固体化为液态，内部原子运动加剧，会离开原有位置向四周扩散。此时慢慢进行退火冷却使其重新固化，粒子往往会停留在比原先能量低得多的位置上，本质上也是通过随机性跳出局部最优。 本文尝试用模拟退火算法对TSP问题（travelling...","link":"","photos":[],"count_time":{"symbolsCount":"7.3k","symbolsTime":"7 mins."},"categories":[{"name":"智能算法","slug":"智能算法","count":4,"path":"api/categories/智能算法.json"}],"tags":[{"name":"python","slug":"python","count":11,"path":"api/tags/python.json"},{"name":"数学煎馍","slug":"数学煎馍","count":4,"path":"api/tags/数学煎馍.json"},{"name":"TSP","slug":"TSP","count":2,"path":"api/tags/TSP.json"},{"name":"Gurobi","slug":"Gurobi","count":2,"path":"api/tags/Gurobi.json"}],"author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}}},{"title":"粒子群算法","uid":"67f2a5903961e96580b14bb51c7ce9c9","slug":"粒子群算法","date":"2022-08-22T02:55:53.000Z","updated":"2022-08-28T05:34:26.011Z","comments":true,"path":"api/articles/粒子群算法.json","keywords":null,"cover":[],"text":"通过上一节我们得知遗传算法是一种智能的随机搜索算法，胡乱随机的过程中隐隐透着一丝章法，这是借鉴了大自然的生存法则。而今天登场的粒子群算法也源于日常生活。 当地上掉落一坨蜂蜜时，我们希望找到它的方位，怎么办呢？于是乎我们放出100只蚂蚁，让他们在这片广袤无垠的土地上随机搜索。但并不...","link":"","photos":[],"count_time":{"symbolsCount":"4.2k","symbolsTime":"4 mins."},"categories":[{"name":"智能算法","slug":"智能算法","count":4,"path":"api/categories/智能算法.json"}],"tags":[{"name":"python","slug":"python","count":11,"path":"api/tags/python.json"},{"name":"数学煎馍","slug":"数学煎馍","count":4,"path":"api/tags/数学煎馍.json"},{"name":"Gurobi","slug":"Gurobi","count":2,"path":"api/tags/Gurobi.json"}],"author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}}},{"title":"遗传算法","uid":"5e05676005a67b187c728a6e49c065fb","slug":"遗传算法","date":"2022-08-19T16:37:41.000Z","updated":"2022-08-20T10:04:49.322Z","comments":true,"path":"api/articles/遗传算法.json","keywords":null,"cover":[],"text":"“物竞天择，适者生存“，进化界的名言没想到也能用在算法里，不得不承认每个算法工程师也是天马行空的魔法师。由于经常参加数学煎馍美食烹饪大赛，因此时不时需要和启发式算法打交道，这些智能算法的思想充满着活力和开拓性，coding的时候甚至感觉自己像上帝一样为自己的世界制定着规则，不禁连...","link":"","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[{"name":"智能算法","slug":"智能算法","count":4,"path":"api/categories/智能算法.json"}],"tags":[{"name":"python","slug":"python","count":11,"path":"api/tags/python.json"},{"name":"数学煎馍","slug":"数学煎馍","count":4,"path":"api/tags/数学煎馍.json"}],"author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}}}]}