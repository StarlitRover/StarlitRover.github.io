{"title":"『1157』Anniversary","uid":"11dc3c2912f3e8bbbeebc80b6943eb66","slug":"『1157』Anniversary","date":"2022-11-29T14:27:33.000Z","updated":"2022-11-29T14:42:59.366Z","comments":true,"path":"api/articles/『1157』Anniversary.json","keywords":null,"cover":null,"content":"<p>Zhejiang University is about to celebrate her 122th anniversary in 2019. To prepare for the celebration, the alumni association （校友会） has gathered the ID’s of all her alumni. Now your job is to write a program to count the number of alumni among all the people who come to the celebration.</p>\n<span id=\"more\"></span>\n\n<h3><span id=\"input-specification\">Input Specification:</span></h3><p>Each input file contains one test case. For each case, the first part is about the information of all the alumni. Given in the first line is a positive integer $N (≤10^5)$. Then N lines follow, each contains an ID number of an alumnus. An ID number is a string of 18 digits or the letter <code>X</code>. It is guaranteed that all the ID’s are distinct.</p>\n<p>The next part gives the information of all the people who come to the celebration. Again given in the first line is a positive integer $M (≤10^5)$. Then M lines follow, each contains an ID number of a guest. It is guaranteed that all the ID’s are distinct.</p>\n<h3><span id=\"output-specification\">Output Specification:</span></h3><p>First print in a line the number of alumni among all the people who come to the celebration. Then in the second line, print the ID of the oldest alumnus – notice that the 7th - 14th digits of the ID gives one’s birth date. If no alumnus comes, output the ID of the oldest guest instead. It is guaranteed that such an alumnus or guest is unique.</p>\n<h3><span id=\"sample-input\">Sample Input:</span></h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">5</span><br><span class=\"line\">372928196906118710</span><br><span class=\"line\">610481197806202213</span><br><span class=\"line\">440684198612150417</span><br><span class=\"line\">13072819571002001X</span><br><span class=\"line\">150702193604190912</span><br><span class=\"line\">6</span><br><span class=\"line\">530125197901260019</span><br><span class=\"line\">150702193604190912</span><br><span class=\"line\">220221196701020034</span><br><span class=\"line\">610481197806202213</span><br><span class=\"line\">440684198612150417</span><br><span class=\"line\">370205198709275042</span><br></pre></td></tr></table></figure>\n\n<h3><span id=\"sample-output\">Sample Output:</span></h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3</span><br><span class=\"line\">150702193604190912</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2><span id=\"ω\">Ω</span></h2><p>$\\qquad$给出校友身份ID，然后统计参加校庆人群中的校友个数，并输出最年长的校友ID。如果没有校友参加，则输出所有宾客中最年长的ID。</p>\n<p>$\\qquad$最年长ID具有明显的优先级，与pair比较的思想类似，我们可以用pair对$\\{notAlu,birth\\ date\\}$的比较来判断是否需要替换最年长ID。比如说一个校友<code>&#123;false,&quot;19991229&quot;&#125;</code>和一个非校友<code>&#123;true,&quot;18900101&quot;&#125;</code>，由于前者的pair较小（$false&lt;true$），选择前者为最年长ID。</p>\n<hr>\n<h2><span id>🐎</span></h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;set&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    set&lt;string&gt; alu;</span><br><span class=\"line\">    <span class=\"type\">int</span> n, m, cnt = <span class=\"number\">0</span>;</span><br><span class=\"line\">    cin &gt;&gt; n;</span><br><span class=\"line\">    string id, oldest;</span><br><span class=\"line\">    pair&lt;<span class=\"type\">bool</span>, string&gt; cmp&#123;<span class=\"literal\">true</span>, <span class=\"built_in\">string</span>(<span class=\"number\">8</span>, <span class=\"string\">&#x27;9&#x27;</span>)&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; ++i)</span><br><span class=\"line\">        cin &gt;&gt; id, alu.<span class=\"built_in\">insert</span>(id);</span><br><span class=\"line\">    cin &gt;&gt; m;</span><br><span class=\"line\">    <span class=\"type\">bool</span> notAlu;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; m; ++i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        cin &gt;&gt; id;</span><br><span class=\"line\">        (notAlu = alu.<span class=\"built_in\">find</span>(id) == alu.<span class=\"built_in\">end</span>()) ?: ++cnt;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">make_pair</span>(notAlu, id.<span class=\"built_in\">substr</span>(<span class=\"number\">6</span>, <span class=\"number\">8</span>)) &lt; cmp)</span><br><span class=\"line\">            cmp = <span class=\"built_in\">make_pair</span>(notAlu, id.<span class=\"built_in\">substr</span>(<span class=\"number\">6</span>, <span class=\"number\">8</span>)), oldest = id;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n%s&quot;</span>, cnt, oldest.<span class=\"built_in\">c_str</span>());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","text":"Zhejiang University is about to celebrate her 122th anniversary in 2019. To prepare for the celebration, the alumni association （校友会） has ga...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"PAT（Advanced Level）Practice","slug":"PAT（Advanced-Level）Practice","count":153,"path":"api/categories/PAT（Advanced-Level）Practice.json"}],"tags":[{"name":"C＋＋","slug":"C＋＋","count":160,"path":"api/tags/C＋＋.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">Input Specification:</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">Output Specification:</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">Sample Input:</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">Sample Output:</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">Ω</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">🐎</span></a>","author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}},"mapped":true,"prev_post":{"title":"「1158」Telefraud Detection","uid":"7369aa2af707a2b4122dd8865d50ba11","slug":"「1158」Telefraud-Detection","date":"2022-12-01T06:53:52.000Z","updated":"2022-12-01T07:32:42.162Z","comments":true,"path":"api/articles/「1158」Telefraud-Detection.json","keywords":null,"cover":null,"text":"Telefraud（电信诈骗） remains a common and persistent problem in our society. In some cases, unsuspecting victims lose their entire life savings. ...","link":"","photos":[],"count_time":{"symbolsCount":"4.8k","symbolsTime":"4 mins."},"categories":[{"name":"PAT（Advanced Level）Practice","slug":"PAT（Advanced-Level）Practice","count":153,"path":"api/categories/PAT（Advanced-Level）Practice.json"}],"tags":[{"name":"C＋＋","slug":"C＋＋","count":160,"path":"api/tags/C＋＋.json"},{"name":"DFS","slug":"DFS","count":7,"path":"api/tags/DFS.json"},{"name":"bitset","slug":"bitset","count":4,"path":"api/tags/bitset.json"}],"author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}}},"next_post":{"title":"『1156」Sexy Primes","uid":"8ed7bca38adabdf721bda6f764633180","slug":"『1156」Sexy-Primes","date":"2022-11-29T12:59:44.000Z","updated":"2022-11-29T14:44:20.206Z","comments":true,"path":"api/articles/『1156」Sexy-Primes.json","keywords":null,"cover":null,"text":"Sexy primes are pairs of primes of the form $(p, p+6)$, so-named since “sex” is the Latin word for “six”. (Quoted from http://mathworld.wolf...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"PAT（Advanced Level）Practice","slug":"PAT（Advanced-Level）Practice","count":153,"path":"api/categories/PAT（Advanced-Level）Practice.json"}],"tags":[{"name":"C＋＋","slug":"C＋＋","count":160,"path":"api/tags/C＋＋.json"},{"name":"prime","slug":"prime","count":6,"path":"api/tags/prime.json"}],"author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}}}}