{"title":"「Section 6」指令系统","uid":"03afcc3b07031cb1f7cc8d70de23254b","slug":"指令系统","date":"2022-03-16T01:57:48.000Z","updated":"2022-03-17T08:56:15.319Z","comments":true,"path":"api/articles/指令系统.json","keywords":null,"cover":[],"content":"<p><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.787ex\" height=\"0.036ex\" role=\"img\" focusable=\"false\" viewbox=\"0 0 3000 16\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mstyle\"><g data-mml-node=\"mspace\"/></g><g data-mml-node=\"mstyle\" transform=\"translate(2000,0)\"><g data-mml-node=\"mspace\"/></g></g></g></svg></mjx-container>α. <a href=\"#1\">指令系统概述</a></p>\n<p><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.787ex\" height=\"0.036ex\" role=\"img\" focusable=\"false\" viewbox=\"0 0 3000 16\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mstyle\"><g data-mml-node=\"mspace\"/></g><g data-mml-node=\"mstyle\" transform=\"translate(2000,0)\"><g data-mml-node=\"mspace\"/></g></g></g></svg></mjx-container>β. <a href=\"#2\">指令格式</a></p>\n<p><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"6.787ex\" height=\"0.036ex\" role=\"img\" focusable=\"false\" viewbox=\"0 0 3000 16\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mstyle\"><g data-mml-node=\"mspace\"/></g><g data-mml-node=\"mstyle\" transform=\"translate(2000,0)\"><g data-mml-node=\"mspace\"/></g></g></g></svg></mjx-container>γ. <a href=\"#3\">操作数类型</a></p>\n<span id=\"more\"></span>\n\n<hr>\n<h2><span id=\"α-指令系统概述\">α <span id=\"1\">指令系统概述</span></span></h2><ol>\n<li><p>现代冯·诺伊曼计算机结构框图是以存储器为中心，计算机的工作过程就是循环往复地取指令、分析指令、执行指令的过程。</p>\n<img src=\"/images/计算机组成原理/5/1.png\" style=\"zoom:45%;\">\n</li>\n<li><p><strong>一些概念</strong></p>\n<ul>\n<li><p><strong>计算机指令</strong>：指示计算机硬件进行某种操作的命令。</p>\n</li>\n<li><p><strong>机器指令</strong>（机器字）：使用二进制来表示计算机指令，能被计算机硬件识别并执行的01代码串。</p>\n</li>\n<li><p><strong>机器语言</strong>：机器指令编写程序的规范，是计算机硬件的系统语言。</p>\n</li>\n<li><p><strong>机器语言程序</strong>：机器指令的有序集合，具有特定功能。</p>\n</li>\n<li><p><strong>指令系统</strong>：一台计算机<strong>所有</strong>机器指令的集合。</p>\n<img src=\"/images/计算机组成原理/5/2.png\" style=\"zoom:40%;\">\n</li>\n<li><p><strong>汇编指令</strong>：机器指令的代码助记符，与机器指令几乎一一对应。</p>\n</li>\n<li><p><strong>微指令</strong>：指在机器的一个CPU周期中，一组实现一定操作功能的微命令的组合，属于硬件层面。若干条微指令可以构成一个微程序，而一个微程序就对应了一条机器指令。</p>\n</li>\n</ul>\n</li>\n<li><p><strong>不同级别指令之间的关系</strong></p>\n<img src=\"/images/计算机组成原理/5/3.jpg\" style=\"zoom:30%;\">\n\n<ul>\n<li>高级语言与汇编语言指令属于软件层面，而机器指令与微指令则属于硬件层面</li>\n<li>一条高级语言被编译为多条机器指令</li>\n<li>汇编指令与机器指令一一对应</li>\n<li>一条机器指令则依赖于多条微指令的执行</li>\n</ul>\n</li>\n<li><p><strong>指令所包含的信息</strong></p>\n<ul>\n<li><strong>指令功能</strong>：要执行的操作，一般有运算、传送、移位、跳转等。</li>\n<li><strong>操作对象</strong>：要处理或参加运算的数据，称为<strong>源操作数</strong>。</li>\n<li><strong>操作的结果</strong>：存放运算或处理结果的数据，称为<strong>目的操作数</strong>（⚠️目的操作数也可以为源操作数）。</li>\n<li><strong>下一条指令地址</strong>：下一条指令在主存中的地址。</li>\n</ul>\n</li>\n<li><p><strong>指令集体系架构</strong>(ISA)：处理器所支持的指令集（汇编指令集及机器指令编码）及其操作数的相关信息（寄存器、存储器、I/O等）</p>\n<ul>\n<li><strong>作用</strong>：在系统软件设计者和处理器硬件设计者之间提供了一个抽象层<ul>\n<li><strong>软件设计者</strong>：依据ISA知道<strong>如何编写机器语言程序</strong>来控制与使用处理器硬件</li>\n<li><strong>硬件设计者</strong>：依据ISA来<strong>设计微体系结构</strong>，并实现能执行机器语言的处理器硬件</li>\n</ul>\n</li>\n<li><strong>内容</strong><ul>\n<li>★可执行的指令集合，包括指令格式、指令类型、指令功能、指令编码等</li>\n<li>指令可以接受的数据类型</li>\n<li>操作数可以存放的寄存器组和结构</li>\n<li>操作数所能存放的存储空间（存储器和I/O）大小、编址方式、大小端模式等</li>\n<li>指令获取操作数的方式，即数据寻址方式</li>\n<li>指令执行的控制方式，即指令寻址方式，包括程序计数器、条件码定义等</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h2><span id=\"β-指令格式\">β <span id=\"2\">指令格式</span></span></h2><ol>\n<li><p><strong>基本格式</strong>：操作码字段（OP）+地址码字段（A）</p>\n<ul>\n<li><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.025ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1.357ex\" height=\"1.025ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -442 600 453\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/></g></g></g></svg></mjx-container>位二进制操作码最多表示<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"2.279ex\" height=\"1.528ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -675.5 1007.3 675.5\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msup\"><g data-mml-node=\"mn\"><path data-c=\"32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(533,363) scale(0.707)\"><path data-c=\"1D45B\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/></g></g></g></g></svg></mjx-container>种指令</li>\n<li>地址码用于寻找操作数或下一条指令地址</li>\n</ul>\n</li>\n<li><p><strong>指令寻址方式</strong></p>\n<ul>\n<li>程序中的机器指令序列在主存中往往按顺序存放</li>\n<li>CPU使用程序计数器PC（Program Counter）来存储指令地址</li>\n<li>下一条指令地址可以由<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.186ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.315ex\" height=\"1.781ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -705 3233.4 787\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(751,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(1733.2,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"/></g><g data-mml-node=\"mn\" transform=\"translate(2733.4,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"/></g></g></g></svg></mjx-container>指出</li>\n<li>转移类指令（即非顺序执行语句，如循环等）依旧读取<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.186ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"7.315ex\" height=\"1.781ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -705 3233.4 787\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><path data-c=\"1D443\" d=\"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z\"/></g><g data-mml-node=\"mi\" transform=\"translate(751,0)\"><path data-c=\"1D436\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"/></g><g data-mml-node=\"mo\" transform=\"translate(1733.2,0)\"><path data-c=\"2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"/></g><g data-mml-node=\"mn\" transform=\"translate(2733.4,0)\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"/></g></g></g></svg></mjx-container>处指令，只是该指令是跳转指令</li>\n</ul>\n</li>\n<li><p><strong>指令字长</strong>：一条机器指令的位数</p>\n<ul>\n<li><strong>机器字长</strong>：计算机一次能处理的二进制数据的位数</li>\n<li><strong>短格式指令</strong>：指令字长≤机器字长，节省空间；<strong>长格式指令</strong>：指令字长&gt;机器字长，包含更多操作信息（⚠️两者可并存于一个指令系统）</li>\n<li><strong>定长指令系统</strong>：所有指令字长相等，一般都等于机器字长，结构简单；<strong>变长指令系统</strong>：指令字长不固定，通常取字节的整数倍，冗余状态少，结构灵活（<strong>单字长指令</strong>：指令字长=机器字；<strong>双字长指令</strong>：指令字长=机器字长*2）</li>\n</ul>\n</li>\n<li><p><strong>地址码</strong>：用来寻找执行指令所需要的操作数（分为源和目的操作数）或者下条指令地址，地址码的含义取决于寻址方式。</p>\n<ul>\n<li><p><strong>三地址指令</strong>：OP｜A1｜A2｜A3，(A1) OP (A2) →A3</p>\n</li>\n<li><p><strong>二地址指令</strong>：OP｜A1｜A2，(A1) OP (A2) →A1</p>\n</li>\n<li><p><strong>单地址指令</strong>：OP｜A，(AC) OP (A) →AC（AC为隐含操作数） or OP(A)→A（单目运算）</p>\n</li>\n<li><p><strong>零地址指令</strong>：OP，无需操作数如占位和延时而设置的空操作指令NOP、等待指令WAIT、停机指令HALT等，或是隐含操作数的单目运算符</p>\n<p>⚠️上述四种指令可以并存于一个指令系统</p>\n</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h2><span id=\"γ-操作数类型\">γ <span id=\"3\">操作数类型</span></span></h2><ol>\n<li><p>根据操作数的存放位置进行分类</p>\n<ul>\n<li><strong>立即数类型</strong>：操作数是常数，存放在指令的地址字段A上（指令存放在主存 [⚠️即为内存] 中）</li>\n<li><strong>寄存器类型</strong>：操作数存放在CPU的通用寄存器中，A为寄存器编号/地址</li>\n<li><strong>存储器类型</strong>：操作数存放在主存中，A为其地址信息（取决于寻址方式）</li>\n<li><strong>I/O数据类型</strong>：操作数存放在I/O设备接口中，A为其端口地址Port</li>\n</ul>\n</li>\n<li><p>根据操作数的物理含义进行分类</p>\n<ul>\n<li><p><strong>数值数据</strong>：整数、浮点数、十进制数，带符号数/ 无符号数</p>\n</li>\n<li><p><strong>指针/地址</strong>：指存储器地址，由访问存储器的指令计算出（⚠️是无符号整数）</p>\n</li>\n<li><p><strong>位或位串数据</strong>：一般用于表示标志位、状态位、控制位等信息</p>\n</li>\n<li><p><strong>字符或者字符串</strong>：一般用于表示文本信息，包括西文字符(ASCIl码）和中文字（内码）等</p>\n</li>\n<li><p><strong>逻辑数据</strong>：用0/1表示真/假的逻辑值，通常用于条件转移指令中对条件码的检测</p>\n<p>⚠️仅根据操作数的二进制代码则无法进行区分其具体的含义</p>\n</li>\n</ul>\n</li>\n</ol>\n","text":"α. 指令系统概述 β. 指令格式 γ. 操作数类型 α 指令系统概述 现代冯·诺伊曼计算机结构框图是以存储器为中心，计算机的工作过程就是循环往复地取指令、分析指令、执行指令的过程。 一些概念 计算机指令：指示计算机硬件进行某种操作的命令。 机器指令（机器字）：使用二进制来表示计...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"计算机组成原理","slug":"计算机组成原理","count":8,"path":"api/categories/计算机组成原理.json"}],"tags":[{"name":"notes","slug":"notes","count":13,"path":"api/tags/notes.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">α 指令系统概述</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">β 指令格式</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">γ 操作数类型</span></a></li></ol>","author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"数着头发过日子","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}},"mapped":true,"prev_post":{"title":"Build Qt in arm64","uid":"fbbac3b5688cf257c824005fed6d10e6","slug":"Build-Qt-in-arm64","date":"2022-03-19T02:32:08.000Z","updated":"2022-09-26T17:02:27.338Z","comments":true,"path":"api/articles/Build-Qt-in-arm64.json","keywords":null,"cover":[],"text":"♿︎ 引言自从电脑换成Mac后就需要面对芯片架构不同带来的众多问题，市场上还是有很多软件只适配x86而不支持arm。当然这段时间我体验下来，arm架构采用的是精简指令集，在续航方面全面吊打x86，一般来说不插电工作一天绰绰有余。当然缺点也很明显，就是软件市场依然不是很友好，比如说V...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"血泪史","slug":"血泪史","count":2,"path":"api/categories/血泪史.json"}],"tags":[{"name":"arm64","slug":"arm64","count":1,"path":"api/tags/arm64.json"}],"author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"数着头发过日子","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}}},"next_post":{"title":"「1015」Reversible Primes","uid":"b75f95681a59c62b9564ea4a8f3a4ec9","slug":"1015-Reversible-Primes","date":"2022-03-15T08:02:21.000Z","updated":"2022-12-02T10:22:48.845Z","comments":true,"path":"api/articles/1015-Reversible-Primes.json","keywords":null,"cover":null,"text":"➳ENTRY A reversible prime in any number system is a prime whose “reverse” in that number system is also a prime. For example in the decimal ...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"PAT（Advanced Level）Practice","slug":"PAT（Advanced-Level）Practice","count":153,"path":"api/categories/PAT（Advanced-Level）Practice.json"}],"tags":[{"name":"C＋＋","slug":"C＋＋","count":160,"path":"api/tags/C＋＋.json"},{"name":"prime","slug":"prime","count":6,"path":"api/tags/prime.json"}],"author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"数着头发过日子","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}}}}