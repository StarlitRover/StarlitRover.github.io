{"title":"「1067」Sort with Swap(0, i)","uid":"f66bf5b8d2fc86417cb09b027c83ec14","slug":"「1067」Sort-with-Swap-0-i","date":"2022-09-25T09:25:33.000Z","updated":"2022-09-25T10:12:35.709Z","comments":true,"path":"api/articles/「1067」Sort-with-Swap-0-i.json","keywords":null,"cover":null,"content":"<p>Given any permutation of the numbers {0, 1, 2,…, N−1}, it is easy to sort them in increasing order. But what if <code>Swap(0, *)</code> is the ONLY operation that is allowed to use? For example, to sort {4, 0, 2, 1, 3} we may apply the swap operations in the following way:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Swap(0, 1) =&gt; &#123;4, 1, 2, 0, 3&#125;</span><br><span class=\"line\">Swap(0, 3) =&gt; &#123;4, 1, 2, 3, 0&#125;</span><br><span class=\"line\">Swap(0, 4) =&gt; &#123;0, 1, 2, 3, 4&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Now you are asked to find the minimum number of swaps need to sort the given permutation of the first N nonnegative integers.</p>\n<span id=\"more\"></span>\n\n<h3><span id=\"input-specification\">Input Specification:</span></h3><p>Each input file contains one test case, which gives a positive $N (≤10^5)$ followed by a permutation sequence of {0, 1, …, N−1}. All the numbers in a line are separated by a space.</p>\n<h3><span id=\"output-specification\">Output Specification:</span></h3><p>For each case, simply print in a line the minimum number of swaps need to sort the given permutation.</p>\n<h3><span id=\"sample-input\">Sample Input:</span></h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10</span><br><span class=\"line\">3 5 7 2 6 4 9 0 8 1</span><br></pre></td></tr></table></figure>\n\n<h3><span id=\"sample-output\">Sample Output:</span></h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">9</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2><span id=\"ω\">Ω</span></h2><p>$\\qquad$给出{0,1,…,N-1}的一个排列，只能交换0和其他数字的位置，试问最少需要几次交换才能使其升序排列。</p>\n<p>$\\qquad$事实上这跟排序毫无关系，我们可以认为每个数都有一个自己的座位，最后需要让每个数都在自己的位置上，这道题为了方便起见就规定每个数的位置序号与自己相等。</p>\n<p>$\\qquad$乍看像是排列组合问题，一个很贪心的思路就是每次0都和本应该在它位置上的数交换，这样能保证每次交换都能让一个数归位。但试着手排几次会发现有时候排着排着0自己就会归位，然而后面的数组还并不是有序的，此时就需要让0和其中一个还不在自己位置上的数进行交换，但这样的交换不会让任何数归位，即效益为0。</p>\n<p>$\\qquad$我们知道一次交换最多让两个数归位，但由于其中一个是常驻嘉宾0，我们可以暂且不考虑，因为其余数归位后0也必然归位。这意味着交换一次让一个数归位就是最大效益。那么我们能否避免无效交换的产生呢？答案是不行，你会发现每个位置事实上都早已决定下次交换的位置。</p>\n<p>$\\qquad$如果我们$pos[i]$来表示数$i$的位置序号，节点编号$\\{0,1,\\cdots,N-1\\}$，定义有向边$i→ pos[i]$。这张图就是0的路线图，然而图并不一定是连通的，对于那些0不在内部的连通分图，就需要0进行一次无效交换进入，还需要一次交换把踢出去的元素换回来。这样一来就会比0所在的连通分图多2次交换。</p>\n<p>$\\qquad$对于原本就在正确位置上的数一开始就标记排除，然后求连通分图数就完事了。</p>\n<hr>\n<h2><span id>🐎</span></h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n, cnt = <span class=\"number\">0</span>;</span><br><span class=\"line\">    cin &gt;&gt; n;</span><br><span class=\"line\">    <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">ptm</span><span class=\"params\">(n)</span>, <span class=\"title\">flag</span><span class=\"params\">(n)</span></span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; ++i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        cin &gt;&gt; ptm[i];</span><br><span class=\"line\">        flag[i] = (ptm[i] == i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; ++i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (flag[i]) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> j = i;</span><br><span class=\"line\">        cnt += (i == <span class=\"number\">0</span> ? <span class=\"number\">-1</span> : <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (!flag[j])</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            flag[j] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            j = ptm[j];</span><br><span class=\"line\">            ++cnt;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cout &lt;&lt; cnt;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","text":"Given any permutation of the numbers {0, 1, 2,…, N−1}, it is easy to sort them in increasing order. But what if Swap(0, *) is the ONLY opera...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"PAT（Advanced Level）Practice","slug":"PAT（Advanced-Level）Practice","count":153,"path":"api/categories/PAT（Advanced-Level）Practice.json"}],"tags":[{"name":"C＋＋","slug":"C＋＋","count":160,"path":"api/tags/C＋＋.json"},{"name":"Graph","slug":"Graph","count":16,"path":"api/tags/Graph.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">Input Specification:</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">Output Specification:</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">Sample Input:</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">Sample Output:</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">Ω</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">🐎</span></a>","author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}},"mapped":true,"prev_post":{"title":"「1068」Find More Coins","uid":"4639b5ea2946dd4eb301e11b5cb60396","slug":"「1068」Find-More-Coins","date":"2022-09-28T13:00:31.000Z","updated":"2022-09-29T05:44:10.854Z","comments":true,"path":"api/articles/「1068」Find-More-Coins.json","keywords":null,"cover":null,"text":"Eva loves to collect coins from all over the universe, including some other planets like Mars. One day she visited a universal shopping mall...","link":"","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"PAT（Advanced Level）Practice","slug":"PAT（Advanced-Level）Practice","count":153,"path":"api/categories/PAT（Advanced-Level）Practice.json"}],"tags":[{"name":"C＋＋","slug":"C＋＋","count":160,"path":"api/tags/C＋＋.json"},{"name":"sort","slug":"sort","count":24,"path":"api/tags/sort.json"}],"author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}}},"next_post":{"title":"Lab2: system calls","uid":"1b4d009413a4a1733c93e882f288fd9a","slug":"Lab2-system-calls","date":"2022-09-25T03:57:05.000Z","updated":"2022-09-25T07:49:21.925Z","comments":true,"path":"api/articles/Lab2-system-calls.json","keywords":null,"cover":[],"text":"$\\qquad$上周打了一场数模国赛，打前元气超人，打完葛优躺平。Lab2只有两个小实验，聚焦于如何创建系统调用命令，也并不是那么简单，实验文档戳这。 ❖ Coding ☑︎ System call tracing (moderate)$\\qquad$我们需要创建一个trace系统...","link":"","photos":[],"count_time":{"symbolsCount":"8.1k","symbolsTime":"7 mins."},"categories":[{"name":"操作系统","slug":"操作系统","count":3,"path":"api/categories/操作系统.json"}],"tags":[{"name":"走码观花","slug":"走码观花","count":15,"path":"api/tags/走码观花.json"},{"name":"xv6","slug":"xv6","count":3,"path":"api/tags/xv6.json"}],"author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}}}}