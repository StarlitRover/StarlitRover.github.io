{"title":"7-45 航空公司VIP客户查询","uid":"bd9129163f952044453adc76640f4d91","slug":"7-45-航空公司VIP客户查询","date":"2022-02-02T12:48:48.000Z","updated":"2022-02-10T13:12:16.000Z","comments":true,"path":"api/articles/7-45-航空公司VIP客户查询.json","keywords":null,"cover":[],"content":"<p><a href=\"https://pintia.cn/problem-sets/15/problems/892\">➳ENTRY</a><br><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.525ex\" height=\"0.036ex\" role=\"img\" focusable=\"false\" viewbox=\"0 0 2000 16\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mstyle\"><g data-mml-node=\"mspace\"/></g></g></g></svg></mjx-container>不少航空公司都会提供优惠的会员服务，当某顾客飞行里程累积达到一定数量后，可以使用里程积分直接兑换奖励机票或奖励升舱等服务。现给定某航空公司全体会员的飞行记录，要求实现根据身份证号码快速查询会员里程积分的功能。</p>\n<h2><span id=\"输入格式\">输入格式:</span></h2><p><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.525ex\" height=\"0.036ex\" role=\"img\" focusable=\"false\" viewbox=\"0 0 2000 16\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mstyle\"><g data-mml-node=\"mspace\"/></g></g></g></svg></mjx-container>输入首先给出两个正整数N（≤<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.25ex\" height=\"2.005ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -864 1436.6 886\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msup\"><g data-mml-node=\"mn\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"/><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(500,0)\"/></g><g data-mml-node=\"mn\" transform=\"translate(1033,393.1) scale(0.707)\"><path data-c=\"35\" d=\"M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z\"/></g></g></g></g></svg></mjx-container>）和K（≤500）。其中K是最低里程，即为照顾乘坐短程航班的会员,航空公司还会将航程低于K公里的航班也按K公里累积。随后N行，每行给出一条飞行记录。飞行记录的输入格式为：18位身份证号码（空格）飞行里程。其中身份证号码由17位数字加最后一位校验码组成，校验码的取值范围为0~9和x共11个符号；飞行里程单位为公里，是(0, 15000]区间内的整数。然后给出一个正整数M（≤<mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: -0.05ex;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"3.25ex\" height=\"2.005ex\" role=\"img\" focusable=\"false\" viewbox=\"0 -864 1436.6 886\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"msup\"><g data-mml-node=\"mn\"><path data-c=\"31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"/><path data-c=\"30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(500,0)\"/></g><g data-mml-node=\"mn\" transform=\"translate(1033,393.1) scale(0.707)\"><path data-c=\"35\" d=\"M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z\"/></g></g></g></g></svg></mjx-container>），随后给出M行查询人的身份证号码。</p>\n<span id=\"more\"></span>\n<h2><span id=\"输出格式\">输出格式:</span></h2><p><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.525ex\" height=\"0.036ex\" role=\"img\" focusable=\"false\" viewbox=\"0 0 2000 16\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mstyle\"><g data-mml-node=\"mspace\"/></g></g></g></svg></mjx-container>对每个查询人，给出其当前的里程累积值。如果该人不是会员，则输出<code>No Info</code>。每个查询结果占一行。</p>\n<h2><span id=\"输入样例\">输入样例:</span></h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">4 500\n330106199010080419 499\n110108198403100012 15000\n120104195510156021 800\n330106199010080419 1\n4\n120104195510156021\n110108198403100012\n330106199010080419\n33010619901008041x<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2><span id=\"输出样例\">输出样例:</span></h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">800\n15000\n1000\nNo Info<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<hr>\n<h2><span id=\"cedo\">Cedo</span></h2><pre class=\"line-numbers language-C++\" data-language=\"C++\"><code class=\"language-C++\">#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;map&gt;\n\nusing namespace std;\n\nint main()\n{\n    map&lt;string, int&gt; fly;\n    int m, n, k, d;\n    string id;\n    cin &gt;&gt; n &gt;&gt; k;\n    for (int i = 0; i &lt; n; ++i)\n    {\n        cin &gt;&gt; id &gt;&gt; d;\n        fly[id] += (d &lt; k ? k : d);\n    }\n    cin &gt;&gt; m;\n    for (int i = 0; i &lt; m; ++i)\n    {\n        cin &gt;&gt; id;\n        if (fly.find(id) == fly.end())\n            cout &lt;&lt; \"No Info\" &lt;&lt; endl;\n        else\n            cout &lt;&lt; fly[id] &lt;&lt; endl;\n    }\n}<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2><span id=\"ω\">Ω</span></h2><p><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.525ex\" height=\"0.036ex\" role=\"img\" focusable=\"false\" viewbox=\"0 0 2000 16\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mstyle\"><g data-mml-node=\"mspace\"/></g></g></g></svg></mjx-container>乍看这道题也太简单了吧，直接用map容器乱杀，但是提交上述代码后却得到下面的结果：</p>\n<p><img src=\"/images/PTA-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E9%A2%98%E7%9B%AE%E9%9B%86/7-45/otc1.png\"><br><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.525ex\" height=\"0.036ex\" role=\"img\" focusable=\"false\" viewbox=\"0 0 2000 16\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mstyle\"><g data-mml-node=\"mspace\"/></g></g></g></svg></mjx-container>开始纳闷了，map容器优化的不够好？<br><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.525ex\" height=\"0.036ex\" role=\"img\" focusable=\"false\" viewbox=\"0 0 2000 16\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mstyle\"><g data-mml-node=\"mspace\"/></g></g></g></svg></mjx-container>循着往昔惨痛经历，突然想起cout是个费时的输出函数，那就把所有的cout改成printf试试（满怀期待.jpg)<br><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"9.05ex\" height=\"0.036ex\" role=\"img\" focusable=\"false\" viewbox=\"0 0 4000 16\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mstyle\"><g data-mml-node=\"mspace\"/></g><g data-mml-node=\"mstyle\" transform=\"translate(2000,0)\"><g data-mml-node=\"mspace\"/></g></g></g></svg></mjx-container>�<br><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.525ex\" height=\"0.036ex\" role=\"img\" focusable=\"false\" viewbox=\"0 0 2000 16\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mstyle\"><g data-mml-node=\"mspace\"/></g></g></g></svg></mjx-container>怎么还是一样的结果…cin和cout是一伙的，一起干了吧。</p>\n<pre class=\"line-numbers language-C++\" data-language=\"C++\"><code class=\"language-C++\">#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;map&gt;\n\nusing namespace std;\n\nint main()\n{\n    map&lt;string, int&gt; fly;\n    int m, n, k, d;\n    char id[19];\n    cin &gt;&gt; n &gt;&gt; k;\n    for (int i = 0; i &lt; n; ++i)\n    {\n        scanf(\"%s %d\", &amp;id, &amp;d);\n        fly[id] += (d &lt; k ? k : d);\n    }\n    scanf(\"%d\", &amp;m);\n    for (int i = 0; i &lt; m; ++i)\n    {\n        scanf(\"%s\", &amp;id);\n        if (fly[id])\n            printf(\"%d\\n\", fly[id]);\n        else\n            printf(\"No Info\\n\");\n        // 若id不存在，则fly[id]自动初始化为0\n    }\n}<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.525ex\" height=\"0.036ex\" role=\"img\" focusable=\"false\" viewbox=\"0 0 2000 16\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mstyle\"><g data-mml-node=\"mspace\"/></g></g></g></svg></mjx-container>[小手一点]</p>\n<p><img src=\"/images/PTA-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E9%A2%98%E7%9B%AE%E9%9B%86/7-45/otc2.png\"><br><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.525ex\" height=\"0.036ex\" role=\"img\" focusable=\"false\" viewbox=\"0 0 2000 16\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mstyle\"><g data-mml-node=\"mspace\"/></g></g></g></svg></mjx-container>嗯？(省略一千字脏话…</p>\n<p><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.525ex\" height=\"0.036ex\" role=\"img\" focusable=\"false\" viewbox=\"0 0 2000 16\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mstyle\"><g data-mml-node=\"mspace\"/></g></g></g></svg></mjx-container>由于运行超时的代码看不了运行时间，因此我又顺带把<code>printf</code>改回<code>cout</code>也是可以通过的：</p>\n<p><img src=\"/images/PTA-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E9%A2%98%E7%9B%AE%E9%9B%86/7-45/otc3.png\"><br><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.525ex\" height=\"0.036ex\" role=\"img\" focusable=\"false\" viewbox=\"0 0 2000 16\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mstyle\"><g data-mml-node=\"mspace\"/></g></g></g></svg></mjx-container>嗯，在危险的边缘疯狂试探…(<strong>限时400ms</strong>)</p>\n<hr>\n<h2><span id=\"σ-结语\">Σ 结语</span></h2><p><mjx-container class=\"MathJax\" jax=\"SVG\"><svg style=\"vertical-align: 0;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"4.525ex\" height=\"0.036ex\" role=\"img\" focusable=\"false\" viewbox=\"0 0 2000 16\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"scale(1,-1)\"><g data-mml-node=\"math\"><g data-mml-node=\"mstyle\"><g data-mml-node=\"mspace\"/></g></g></g></svg></mjx-container>事实上已经有很多人做过关于<code>cin</code>、<code>cout</code> 与<code>scanf</code>、<code>printf</code>的效率比较实验了，测试结果显示后者比前者快了将近10倍. 有一种解释认为前者需要缓存而后者直接调用系统的IO函数，是非缓存的. 另外流输入输出依赖于函数重载，也会造成效率的低下.</p>\n","text":"➳ENTRY不少航空公司都会提供优惠的会员服务，当某顾客飞行里程累积达到一定数量后，可以使用里程积分直接兑换奖励机票或奖励升舱等服务。现给定某航空公司全体会员的飞行记录，要求实现根据身份证号码快速查询会员里程积分的功能。 输入格式:输入首先给出两个正整数N（≤）和K（≤500）。...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"PTA-数据结构与算法题目集","slug":"PTA-数据结构与算法题目集","count":7,"path":"api/categories/PTA-数据结构与算法题目集.json"}],"tags":[{"name":"C＋＋","slug":"C＋＋","count":160,"path":"api/tags/C＋＋.json"},{"name":"map","slug":"map","count":25,"path":"api/tags/map.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">输入格式:</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">输出格式:</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">输入样例:</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">输出样例:</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">Cedo</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">Ω</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">Σ 结语</span></a></li></ol>","author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"数着头发过日子","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}},"mapped":true,"prev_post":{"title":"7-46 新浪微博热门话题","uid":"44dec690db2bddd5b1d02e910fef2f3a","slug":"7-46-新浪微博热门话题","date":"2022-02-06T13:21:31.000Z","updated":"2022-11-26T06:48:12.000Z","comments":true,"path":"api/articles/7-46-新浪微博热门话题.json","keywords":null,"cover":[],"text":"➳ENTRY新浪微博可以在发言中嵌入“话题”，即将发言中的话题文字写在一对“#”之间，就可以生成话题链接，点击链接可以看到有多少人在跟自己讨论相同或者相似的话题。新浪微博还会随时更新热门话题列表，并将最热门的话题放在醒目的位置推荐大家关注。 本题目要求实现一个简化的热门话题推荐功...","link":"","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"PTA-数据结构与算法题目集","slug":"PTA-数据结构与算法题目集","count":7,"path":"api/categories/PTA-数据结构与算法题目集.json"}],"tags":[{"name":"C＋＋","slug":"C＋＋","count":160,"path":"api/tags/C＋＋.json"},{"name":"map","slug":"map","count":25,"path":"api/tags/map.json"},{"name":"set","slug":"set","count":16,"path":"api/tags/set.json"}],"author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"数着头发过日子","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}}},"next_post":{"title":"7-44 基于词频的文件相似度","uid":"c1bb0c3958152b806f4d44bad6ebbf7f","slug":"7-44-基于词频的文件相似度","date":"2022-01-27T16:37:22.000Z","updated":"2022-11-26T06:48:52.000Z","comments":true,"path":"api/articles/7-44-基于词频的文件相似度.json","keywords":null,"cover":null,"text":"➳ENTRY实现一种简单原始的文件相似度计算，即以两文件的公共词汇占总词汇的比例来定义相似度。为简化问题，这里不考虑中文（因为分词太难了），只考虑长度不小于3、且不超过10的英文单词，长度超过10的只考虑前10个字母。 输入格式:输入首先给出正整数N（≤100），为文件总数。随后...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"PTA-数据结构与算法题目集","slug":"PTA-数据结构与算法题目集","count":7,"path":"api/categories/PTA-数据结构与算法题目集.json"}],"tags":[{"name":"C＋＋","slug":"C＋＋","count":160,"path":"api/tags/C＋＋.json"},{"name":"set","slug":"set","count":16,"path":"api/tags/set.json"}],"author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"数着头发过日子","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}}}}