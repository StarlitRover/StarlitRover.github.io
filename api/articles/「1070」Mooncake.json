{"title":"「1070」Mooncake","uid":"7776532a38433935aad29c44c794b489","slug":"「1070」Mooncake","date":"2022-09-29T05:43:39.000Z","updated":"2022-09-29T06:55:31.502Z","comments":true,"path":"api/articles/「1070」Mooncake.json","keywords":null,"cover":null,"content":"<p>Mooncake is a Chinese bakery product traditionally eaten during the Mid-Autumn Festival. Many types of fillings and crusts can be found in traditional mooncakes according to the region’s culture. Now given the inventory amounts and the prices of all kinds of the mooncakes, together with the maximum total demand of the market, you are supposed to tell the maximum profit that can be made.</p>\n<p>Note: partial inventory storage can be taken. The sample shows the following situation: given three kinds of mooncakes with inventory amounts being 180, 150, and 100 thousand tons, and the prices being 7.5, 7.2, and 4.5 billion yuans. If the market demand can be at most 200 thousand tons, the best we can do is to sell 150 thousand tons of the second kind of mooncake, and 50 thousand tons of the third kind. Hence the total profit is 7.2 + 4.5&#x2F;2 &#x3D; 9.45 (billion yuans).</p>\n<span id=\"more\"></span>\n\n<h3><span id=\"input-specification\">Input Specification:</span></h3><p>Each input file contains one test case. For each case, the first line contains 2 positive integers N (≤1000), the number of different kinds of mooncakes, and D (≤500 thousand tons), the maximum total demand of the market. Then the second line gives the positive inventory amounts (in thousand tons), and the third line gives the positive prices (in billion yuans) of N kinds of mooncakes. All the numbers in a line are separated by a space.</p>\n<h3><span id=\"output-specification\">Output Specification:</span></h3><p>For each test case, print the maximum profit (in billion yuans) in one line, accurate up to 2 decimal places.</p>\n<h3><span id=\"sample-input\">Sample Input:</span></h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3 200</span><br><span class=\"line\">180 150 100</span><br><span class=\"line\">7.5 7.2 4.5</span><br></pre></td></tr></table></figure>\n\n<h3><span id=\"sample-output\">Sample Output:</span></h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">9.45</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2><span id=\"ω\">Ω</span></h2><p>$\\qquad$如何卖月饼能获利最大，月饼可以拆分，简化版背包问题。</p>\n<p>$\\qquad$由于市场需求是固定的，因此先计算单价，然后将月饼按单价排序，依次卖出，直到卖出总量达到市场需求为止。</p>\n<p>$\\qquad$只是没想到水题里面还暗藏水雷，测试点2一直过不去实在令人狂躁抓头。原来。。月饼库存说的是positive inventory amounts，没说过整数哦，样例中的整数只是特殊情况而已啦，你自己要说是整数我也没有办法诶。</p>\n<p>$\\qquad$PTA的misdirection一直是有一手的。</p>\n<hr>\n<h2><span id>🐎</span></h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;tuple&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> tuple&lt;<span class=\"type\">double</span>, <span class=\"type\">double</span>, <span class=\"type\">double</span>&gt; tddd;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n;</span><br><span class=\"line\">    <span class=\"type\">double</span> d, p = <span class=\"number\">0</span>;</span><br><span class=\"line\">    cin &gt;&gt; n &gt;&gt; d;</span><br><span class=\"line\">    <span class=\"function\">vector&lt;tddd&gt; <span class=\"title\">info</span><span class=\"params\">(n)</span></span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> &amp;k: info)</span><br><span class=\"line\">        cin &gt;&gt; <span class=\"built_in\">get</span>&lt;<span class=\"number\">0</span>&gt;(k);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> &amp;k: info)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        cin &gt;&gt; <span class=\"built_in\">get</span>&lt;<span class=\"number\">1</span>&gt;(k);</span><br><span class=\"line\">        <span class=\"built_in\">get</span>&lt;<span class=\"number\">2</span>&gt;(k) = <span class=\"built_in\">get</span>&lt;<span class=\"number\">1</span>&gt;(k) / <span class=\"built_in\">get</span>&lt;<span class=\"number\">0</span>&gt;(k);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">sort</span>(info.<span class=\"built_in\">begin</span>(), info.<span class=\"built_in\">end</span>(), [](tddd &amp;a, tddd &amp;b) &#123; <span class=\"keyword\">return</span> <span class=\"built_in\">get</span>&lt;<span class=\"number\">2</span>&gt;(a) &gt; <span class=\"built_in\">get</span>&lt;<span class=\"number\">2</span>&gt;(b); &#125;);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n &amp;&amp; d &gt; <span class=\"number\">0</span>; ++i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        p += (d &lt; <span class=\"built_in\">get</span>&lt;<span class=\"number\">0</span>&gt;(info[i]) ? d * <span class=\"built_in\">get</span>&lt;<span class=\"number\">2</span>&gt;(info[i]) : <span class=\"built_in\">get</span>&lt;<span class=\"number\">1</span>&gt;(info[i]));</span><br><span class=\"line\">        d -= <span class=\"built_in\">get</span>&lt;<span class=\"number\">0</span>&gt;(info[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%.2f&quot;</span>, p);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","text":"Mooncake is a Chinese bakery product traditionally eaten during the Mid-Autumn Festival. Many types of fillings and crusts can be found in t...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"PAT（Advanced Level）Practice","slug":"PAT（Advanced-Level）Practice","count":153,"path":"api/categories/PAT（Advanced-Level）Practice.json"}],"tags":[{"name":"C＋＋","slug":"C＋＋","count":160,"path":"api/tags/C＋＋.json"},{"name":"tuple","slug":"tuple","count":9,"path":"api/tags/tuple.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">Input Specification:</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">Output Specification:</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">Sample Input:</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">Sample Output:</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">Ω</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">🐎</span></a>","author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}},"mapped":true,"prev_post":{"title":"「1071」Speech Patterns","uid":"7e7e82299d0e2e6bf939755399447a21","slug":"「1071」Speech-Patterns","date":"2022-09-29T06:36:48.000Z","updated":"2022-10-05T11:24:04.554Z","comments":true,"path":"api/articles/「1071」Speech-Patterns.json","keywords":null,"cover":null,"text":"People often have a preference among synonyms of the same word. For example, some may prefer “the police”, while others may prefer “the cops...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"PAT（Advanced Level）Practice","slug":"PAT（Advanced-Level）Practice","count":153,"path":"api/categories/PAT（Advanced-Level）Practice.json"}],"tags":[{"name":"C＋＋","slug":"C＋＋","count":160,"path":"api/tags/C＋＋.json"},{"name":"map","slug":"map","count":25,"path":"api/tags/map.json"}],"author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}}},"next_post":{"title":"「1068」Find More Coins","uid":"4639b5ea2946dd4eb301e11b5cb60396","slug":"「1068」Find-More-Coins","date":"2022-09-28T13:00:31.000Z","updated":"2022-09-29T05:44:10.854Z","comments":true,"path":"api/articles/「1068」Find-More-Coins.json","keywords":null,"cover":null,"text":"Eva loves to collect coins from all over the universe, including some other planets like Mars. One day she visited a universal shopping mall...","link":"","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"PAT（Advanced Level）Practice","slug":"PAT（Advanced-Level）Practice","count":153,"path":"api/categories/PAT（Advanced-Level）Practice.json"}],"tags":[{"name":"C＋＋","slug":"C＋＋","count":160,"path":"api/tags/C＋＋.json"},{"name":"sort","slug":"sort","count":24,"path":"api/tags/sort.json"}],"author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}}}}