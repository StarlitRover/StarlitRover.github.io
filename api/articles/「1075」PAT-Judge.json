{"title":"「1075」PAT Judge","uid":"50b7040dd173c7b4aabe65b86d7947f4","slug":"「1075」PAT-Judge","date":"2022-10-06T12:17:54.000Z","updated":"2022-10-06T13:11:49.297Z","comments":true,"path":"api/articles/「1075」PAT-Judge.json","keywords":null,"cover":null,"content":"<p>The ranklist of PAT is generated from the status list, which shows the scores of the submissions. This time you are supposed to generate the ranklist for PAT.</p>\n<span id=\"more\"></span>\n\n<h3><span id=\"input-specification\">Input Specification:</span></h3><p>Each input file contains one test case. For each case, the first line contains 3 positive integers, $N (≤10^4)$, the total number of users, K (≤5), the total number of problems, and $M (≤10^5)$, the total number of submissions. It is then assumed that the user id’s are 5-digit numbers from 00001 to N, and the problem id’s are from 1 to K. The next line contains K positive integers <code>p[i]</code> (<code>i</code>&#x3D;1, …, K), where <code>p[i]</code> corresponds to the full mark of the i-th problem. Then M lines follow, each gives the information of a submission in the following format:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user_id problem_id partial_score_obtained</span><br></pre></td></tr></table></figure>\n\n<p>where <code>partial_score_obtained</code> is either −1 if the submission cannot even pass the compiler, or is an integer in the range [0, <code>p[problem_id]</code>]. All the numbers in a line are separated by a space.</p>\n<h3><span id=\"output-specification\">Output Specification:</span></h3><p>For each test case, you are supposed to output the ranklist in the following format:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rank user_id total_score s[1] ... s[K]</span><br></pre></td></tr></table></figure>\n\n<p>where <code>rank</code> is calculated according to the <code>total_score</code>, and all the users with the same <code>total_score</code> obtain the same <code>rank</code>; and <code>s[i]</code> is the partial score obtained for the <code>i</code>-th problem. If a user has never submitted a solution for a problem, then “-“ must be printed at the corresponding position. If a user has submitted several solutions to solve one problem, then the highest score will be counted.</p>\n<p>The ranklist must be printed in non-decreasing order of the ranks. For those who have the same rank, users must be sorted in nonincreasing order according to the number of perfectly solved problems. And if there is still a tie, then they must be printed in increasing order of their id’s. For those who has never submitted any solution that can pass the compiler, or has never submitted any solution, they must NOT be shown on the ranklist. It is guaranteed that at least one user can be shown on the ranklist.</p>\n<h3><span id=\"sample-input\">Sample Input:</span></h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">7 4 20</span><br><span class=\"line\">20 25 25 30</span><br><span class=\"line\">00002 2 12</span><br><span class=\"line\">00007 4 17</span><br><span class=\"line\">00005 1 19</span><br><span class=\"line\">00007 2 25</span><br><span class=\"line\">00005 1 20</span><br><span class=\"line\">00002 2 2</span><br><span class=\"line\">00005 1 15</span><br><span class=\"line\">00001 1 18</span><br><span class=\"line\">00004 3 25</span><br><span class=\"line\">00002 2 25</span><br><span class=\"line\">00005 3 22</span><br><span class=\"line\">00006 4 -1</span><br><span class=\"line\">00001 2 18</span><br><span class=\"line\">00002 1 20</span><br><span class=\"line\">00004 1 15</span><br><span class=\"line\">00002 4 18</span><br><span class=\"line\">00001 3 4</span><br><span class=\"line\">00001 4 2</span><br><span class=\"line\">00005 2 -1</span><br><span class=\"line\">00004 2 0</span><br></pre></td></tr></table></figure>\n\n<h3><span id=\"sample-output\">Sample Output:</span></h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 00002 63 20 25 - 18</span><br><span class=\"line\">2 00005 42 20 0 22 -</span><br><span class=\"line\">2 00007 42 - 25 - 17</span><br><span class=\"line\">2 00001 42 18 18 4 2</span><br><span class=\"line\">5 00004 40 15 0 25 -</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2><span id=\"ω\">Ω</span></h2><p>$\\qquad$国庆的尾巴还能遇上这种烦人的题目，悲伤加倍。估计是没什么题目好编了，PAT评测系统都来了，可能是变相招聘。难是不敢说，烦是真的烦。明天又要关进去了，呜呜呜。</p>\n<p>$\\qquad$借助微薄的PTA使用经验，稍微整理了一下（潜）规则：</p>\n<ol>\n<li><p>用户连编译阶段都没通过时输入的分数为-1</p>\n</li>\n<li><p>单个题目多次提交取最高分（Case 4：第一次满分，第二次编译没通过算满分）</p>\n</li>\n<li><p>没有题目通过编译（包括未提交）的用户不应上榜</p>\n</li>\n<li><p>对于总分为0用户的名次，需要排除那些不参与排名而总得分同样为0的用户</p>\n</li>\n<li><p>只有一次都没提交过的题目输出“-”，编译没通过输出0</p>\n</li>\n<li><p>依次按照总分降序、满分题目个数降序、ID升序的优先级来排名</p>\n</li>\n<li><p>同一题目多次提交满分不要重复计算</p>\n</li>\n</ol>\n<p>$\\qquad$对于复杂的比较规则只要码一个cmp函数即可，头疼的是判断哪些用户需要排名，首先可以设置一个全为false的bool向量，只要有题目通过编译（&gt;-1）就改true说明上榜。另外对于编译没通过和从没提交过也得区分开（5），那么初始化用户题目分数都为-1，若是提交编译未通过就改成0。其余情况就取更高分数。</p>\n<hr>\n<h2><span id>🐎</span></h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;numeric&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\">vector&lt;<span class=\"type\">int</span>&gt; sum, solve;</span><br><span class=\"line\">vector&lt;vector&lt;<span class=\"type\">int</span>&gt;&gt; score;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">cmp</span><span class=\"params\">(<span class=\"type\">int</span> &amp;a, <span class=\"type\">int</span> &amp;b)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (sum[a] != sum[b])</span><br><span class=\"line\">        <span class=\"keyword\">return</span> sum[a] &gt; sum[b];</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (solve[a] != solve[b])</span><br><span class=\"line\">        <span class=\"keyword\">return</span> solve[a] &gt; solve[b];</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> a &lt; b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n, k, m, id, q, s;</span><br><span class=\"line\">    cin &gt;&gt; n &gt;&gt; k &gt;&gt; m;</span><br><span class=\"line\">    <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">mark</span><span class=\"params\">(k)</span>, <span class=\"title\">ids</span><span class=\"params\">(n)</span></span>;</span><br><span class=\"line\">    <span class=\"function\">vector&lt;<span class=\"type\">bool</span>&gt; <span class=\"title\">flag</span><span class=\"params\">(n, <span class=\"literal\">false</span>)</span></span>;</span><br><span class=\"line\">    <span class=\"built_in\">iota</span>(ids.<span class=\"built_in\">begin</span>(), ids.<span class=\"built_in\">end</span>(), <span class=\"number\">0</span>);</span><br><span class=\"line\">    sum = solve = <span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;(n, <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> &amp;v: mark)</span><br><span class=\"line\">        cin &gt;&gt; v;</span><br><span class=\"line\">    score = vector&lt;vector&lt;<span class=\"type\">int</span>&gt;&gt;(n, <span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;(k, <span class=\"number\">-1</span>));</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; m; ++i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        cin &gt;&gt; id &gt;&gt; q &gt;&gt; s;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (score[id - <span class=\"number\">1</span>][q - <span class=\"number\">1</span>] == <span class=\"number\">-1</span> &amp;&amp; s == <span class=\"number\">-1</span>)</span><br><span class=\"line\">            score[id - <span class=\"number\">1</span>][q - <span class=\"number\">1</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            score[id - <span class=\"number\">1</span>][q - <span class=\"number\">1</span>] = (score[id - <span class=\"number\">1</span>][q - <span class=\"number\">1</span>] &lt; s ? (flag[id - <span class=\"number\">1</span>] = <span class=\"literal\">true</span>, s) : score[id - <span class=\"number\">1</span>][q - <span class=\"number\">1</span>]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; ++i)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; k; ++j)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            sum[i] += (score[i][j] != <span class=\"number\">-1</span>) * score[i][j];</span><br><span class=\"line\">            solve[i] += score[i][j] == mark[j];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"built_in\">sort</span>(ids.<span class=\"built_in\">begin</span>(), ids.<span class=\"built_in\">end</span>(), cmp);</span><br><span class=\"line\">    <span class=\"type\">int</span> rank = <span class=\"number\">1</span>, pre = sum[ids[<span class=\"number\">0</span>]], cnt = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> &amp;v: ids)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!flag[v]) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        rank = sum[v] == pre ? rank : cnt;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d %05d %d&quot;</span>, rank, v + <span class=\"number\">1</span>, sum[v]);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; k; ++i)</span><br><span class=\"line\">            cout &lt;&lt; <span class=\"string\">&quot; &quot;</span> &lt;&lt; (score[v][i] == <span class=\"number\">-1</span> ? <span class=\"string\">&quot;-&quot;</span> : <span class=\"built_in\">to_string</span>(score[v][i]));</span><br><span class=\"line\">        cout &lt;&lt; endl;</span><br><span class=\"line\">        pre = sum[v];</span><br><span class=\"line\">        ++cnt;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","text":"The ranklist of PAT is generated from the status list, which shows the scores of the submissions. This time you are supposed to generate the...","link":"","photos":[],"count_time":{"symbolsCount":"4.8k","symbolsTime":"4 mins."},"categories":[{"name":"PAT（Advanced Level）Practice","slug":"PAT（Advanced-Level）Practice","count":153,"path":"api/categories/PAT（Advanced-Level）Practice.json"}],"tags":[{"name":"C＋＋","slug":"C＋＋","count":160,"path":"api/tags/C＋＋.json"},{"name":"sort","slug":"sort","count":24,"path":"api/tags/sort.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">Input Specification:</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">Output Specification:</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">Sample Input:</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">Sample Output:</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">Ω</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">🐎</span></a>","author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}},"mapped":true,"prev_post":{"title":"「1076」Forwards on Weibo","uid":"bdaf6b5d6e486b0211610bff2d92703a","slug":"「1076」Forwards-on-Weibo","date":"2022-10-06T14:08:39.000Z","updated":"2022-10-08T08:41:43.916Z","comments":true,"path":"api/articles/「1076」Forwards-on-Weibo.json","keywords":null,"cover":null,"text":"Weibo is known as the Chinese version of Twitter. One user on Weibo may have many followers, and may follow many other users as well. Hence ...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"PAT（Advanced Level）Practice","slug":"PAT（Advanced-Level）Practice","count":153,"path":"api/categories/PAT（Advanced-Level）Practice.json"}],"tags":[{"name":"C＋＋","slug":"C＋＋","count":160,"path":"api/tags/C＋＋.json"},{"name":"BFS","slug":"BFS","count":10,"path":"api/tags/BFS.json"},{"name":"Graph","slug":"Graph","count":16,"path":"api/tags/Graph.json"}],"author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}}},"next_post":{"title":"「1074」Reversing Linked List","uid":"e845b313b55f4309188a47e3699e705a","slug":"「1074」Reversing-Linked-List","date":"2022-10-06T08:27:35.000Z","updated":"2022-10-06T08:42:36.532Z","comments":true,"path":"api/articles/「1074」Reversing-Linked-List.json","keywords":null,"cover":null,"text":"Given a constant K and a singly linked list L, you are supposed to reverse the links of every K elements on L. For example, given L being 1→...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"PAT（Advanced Level）Practice","slug":"PAT（Advanced-Level）Practice","count":153,"path":"api/categories/PAT（Advanced-Level）Practice.json"}],"tags":[{"name":"C＋＋","slug":"C＋＋","count":160,"path":"api/tags/C＋＋.json"},{"name":"map","slug":"map","count":25,"path":"api/tags/map.json"},{"name":"reverse","slug":"reverse","count":4,"path":"api/tags/reverse.json"},{"name":"list","slug":"list","count":5,"path":"api/tags/list.json"}],"author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}}}}