{"title":"「1058」A+B in Hogwarts","uid":"2d08ef1e83c7532f13470f67dbd15fc9","slug":"「1058」A-B-in-Hogwarts","date":"2022-09-08T12:03:34.000Z","updated":"2022-09-08T12:14:35.574Z","comments":true,"path":"api/articles/「1058」A-B-in-Hogwarts.json","keywords":null,"cover":null,"content":"<p>If you are a fan of Harry Potter, you would know the world of magic has its own currency system – as Hagrid explained it to Harry, “Seventeen silver Sickles to a Galleon and twenty-nine Knuts to a Sickle, it’s easy enough.” Your job is to write a program to compute A+B where A and B are given in the standard form of <code>Galleon.Sickle.Knut</code> (<code>Galleon</code> is an integer in $[0,10^7]$, <code>Sickle</code> is an integer in $[0, 17)$, and <code>Knut</code> is an integer in $[0, 29)$).</p>\n<span id=\"more\"></span>\n\n<h3><span id=\"input-specification\">Input Specification:</span></h3><p>Each input file contains one test case which occupies a line with A and B in the standard form, separated by one space.</p>\n<h3><span id=\"output-specification\">Output Specification:</span></h3><p>For each test case you should output the sum of A and B in one line, with the same format as the input.</p>\n<h3><span id=\"sample-input\">Sample Input:</span></h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3.2.1 10.16.27</span><br></pre></td></tr></table></figure>\n\n<h3><span id=\"sample-output\">Sample Output:</span></h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">14.1.28</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2><span id=\"ω\">Ω</span></h2><p>$\\qquad$不难，可以看成是一个各数位进制不同的三位数相加，个位数是29进制，十位是17进制，输出最终和。</p>\n<p>$\\qquad$想用tuple练练手（温馨提示：事实证明没事不要用奇奇怪怪的容器），然后发现tuple的取元素函数<code>get&lt;&gt;()</code>是一个模版函数，尖括号内的值必须在编译阶段确定，因此不能是变量。幸好只有三位，枚举一波。。。也很累，另外只要设置一个carry变量模拟竖式加法即可。</p>\n<hr>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;tuple&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    tuple&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>, <span class=\"type\">int</span>&gt; a, b, c;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d.%d.%d %d.%d.%d&quot;</span>, &amp;<span class=\"built_in\">get</span>&lt;<span class=\"number\">0</span>&gt;(a), &amp;<span class=\"built_in\">get</span>&lt;<span class=\"number\">1</span>&gt;(a), &amp;<span class=\"built_in\">get</span>&lt;<span class=\"number\">2</span>&gt;(a), &amp;<span class=\"built_in\">get</span>&lt;<span class=\"number\">0</span>&gt;(b), &amp;<span class=\"built_in\">get</span>&lt;<span class=\"number\">1</span>&gt;(b), &amp;<span class=\"built_in\">get</span>&lt;<span class=\"number\">2</span>&gt;(b));</span><br><span class=\"line\">    <span class=\"type\">int</span> carry = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"built_in\">get</span>&lt;<span class=\"number\">2</span>&gt;(c) = (<span class=\"built_in\">get</span>&lt;<span class=\"number\">2</span>&gt;(a) + <span class=\"built_in\">get</span>&lt;<span class=\"number\">2</span>&gt;(b) + carry) % <span class=\"number\">29</span>;</span><br><span class=\"line\">    carry = (<span class=\"built_in\">get</span>&lt;<span class=\"number\">2</span>&gt;(a) + <span class=\"built_in\">get</span>&lt;<span class=\"number\">2</span>&gt;(b) + carry) / <span class=\"number\">29</span>;</span><br><span class=\"line\">    <span class=\"built_in\">get</span>&lt;<span class=\"number\">1</span>&gt;(c) = (<span class=\"built_in\">get</span>&lt;<span class=\"number\">1</span>&gt;(a) + <span class=\"built_in\">get</span>&lt;<span class=\"number\">1</span>&gt;(b) + carry) % <span class=\"number\">17</span>;</span><br><span class=\"line\">    carry = (<span class=\"built_in\">get</span>&lt;<span class=\"number\">1</span>&gt;(a) + <span class=\"built_in\">get</span>&lt;<span class=\"number\">1</span>&gt;(b) + carry) / <span class=\"number\">17</span>;</span><br><span class=\"line\">    <span class=\"built_in\">get</span>&lt;<span class=\"number\">0</span>&gt;(c) = <span class=\"built_in\">get</span>&lt;<span class=\"number\">0</span>&gt;(a) + <span class=\"built_in\">get</span>&lt;<span class=\"number\">0</span>&gt;(b) + carry;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d.%d.%d&quot;</span>, <span class=\"built_in\">get</span>&lt;<span class=\"number\">0</span>&gt;(c), <span class=\"built_in\">get</span>&lt;<span class=\"number\">1</span>&gt;(c), <span class=\"built_in\">get</span>&lt;<span class=\"number\">2</span>&gt;(c));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","text":"If you are a fan of Harry Potter, you would know the world of magic has its own currency system – as Hagrid explained it to Harry, “Seventee...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"PAT（Advanced Level）Practice","slug":"PAT（Advanced-Level）Practice","count":153,"path":"api/categories/PAT（Advanced-Level）Practice.json"}],"tags":[{"name":"C＋＋","slug":"C＋＋","count":160,"path":"api/tags/C＋＋.json"},{"name":"tuple","slug":"tuple","count":9,"path":"api/tags/tuple.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">Input Specification:</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">Output Specification:</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">Sample Input:</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">Sample Output:</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">Ω</span></a>","author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}},"mapped":true,"prev_post":{"title":"「1059」Prime Factors","uid":"d25a64f6e3048948d06ba269622dda29","slug":"「1059」Prime-Factors","date":"2022-09-08T13:23:41.000Z","updated":"2022-09-08T13:51:01.550Z","comments":true,"path":"api/articles/「1059」Prime-Factors.json","keywords":null,"cover":null,"text":"Given any positive integer N, you are supposed to find all of its prime factors, and write them in the format $N &#x3D; p_1​^{k_1}​×p_2​^{k_...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"PAT（Advanced Level）Practice","slug":"PAT（Advanced-Level）Practice","count":153,"path":"api/categories/PAT（Advanced-Level）Practice.json"}],"tags":[{"name":"C＋＋","slug":"C＋＋","count":160,"path":"api/tags/C＋＋.json"},{"name":"prime","slug":"prime","count":6,"path":"api/tags/prime.json"}],"author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}}},"next_post":{"title":"「1057」Stack","uid":"c3a496a07a213e1385fa77bc05492d6e","slug":"「1057」Stack","date":"2022-09-08T02:14:58.000Z","updated":"2022-09-08T03:10:22.187Z","comments":true,"path":"api/articles/「1057」Stack.json","keywords":null,"cover":null,"text":"Stack is one of the most fundamental data structures, which is based on the principle of Last In First Out (LIFO). The basic operations incl...","link":"","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"PAT（Advanced Level）Practice","slug":"PAT（Advanced-Level）Practice","count":153,"path":"api/categories/PAT（Advanced-Level）Practice.json"}],"tags":[{"name":"C＋＋","slug":"C＋＋","count":160,"path":"api/tags/C＋＋.json"},{"name":"binary search","slug":"binary-search","count":7,"path":"api/tags/binary-search.json"},{"name":"stack","slug":"stack","count":3,"path":"api/tags/stack.json"}],"author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}}}}