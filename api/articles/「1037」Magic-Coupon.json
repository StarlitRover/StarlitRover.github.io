{"title":"「1037」Magic Coupon","uid":"0738eb06f86d646ed22a63acbd8bab64","slug":"「1037」Magic-Coupon","date":"2022-08-05T15:10:40.000Z","updated":"2022-08-06T04:15:41.424Z","comments":true,"path":"api/articles/「1037」Magic-Coupon.json","keywords":null,"cover":null,"content":"<p>The magic shop in Mars is offering some magic coupons. Each coupon has an integer N printed on it, meaning that when you use this coupon with a product, you may get N times the value of that product back! What is more, the shop also offers some bonus product for free. However, if you apply a coupon with a positive N to this bonus product, you will have to pay the shop N times the value of the bonus product… but hey, magically, they have some coupons with negative N’s!</p>\n<p>For example, given a set of coupons $\\{1,2,4,−1\\}$, and a set of product values $\\{7,6,−2,−3\\}$ (in Mars dollars M\\$) where a negative value corresponds to a bonus product. You can apply coupon 3 (with N being 4) to product 1 (with value M\\$7) to get M\\$28 back; coupon 2 to product 2 to get M\\$12 back; and coupon 4 to product 4 to get M\\$3 back. On the other hand, if you apply coupon 3 to product 4, you will have to pay M\\$12 to the shop.</p>\n<p>Each coupon and each product may be selected at most once. Your task is to get as much money back as possible.</p>\n<span id=\"more\"></span>\n\n<h3><span id=\"input-specification\">Input Specification:</span></h3><p>Each input file contains one test case. For each case, the first line contains the number of coupons $N_C$​, followed by a line with $N_C$ coupon integers. Then the next line contains the number of products $N_P$​, followed by a line with $N_P$​ product values. Here $1≤N_C​,N_P​≤10^5$,  and it is guaranteed that all the numbers will not exceed $2^{30}$.</p>\n<h3><span id=\"output-specification\">Output Specification:</span></h3><p>For each test case, simply print in a line the maximum amount of money you can get back.</p>\n<h3><span id=\"sample-input\">Sample Input:</span></h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4</span><br><span class=\"line\">1 2 4 -1</span><br><span class=\"line\">4</span><br><span class=\"line\">7 6 -2 -3</span><br></pre></td></tr></table></figure>\n\n<h3><span id=\"sample-output\">Sample Output:</span></h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">43</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2><span id=\"ω\">Ω</span></h2><p>$\\qquad$火星超市，嗯，我故居，发优惠券，一张优惠券只能和一件产品搭配使用，给出一系列优惠券和商品价格（均可为负），优惠券和商品价格的乘积为可以返还的火星币数，要求你计算出最大的返还币数。（就是排列组合最大化目标函数，背景整的花里胡哨）</p>\n<p>$\\qquad$不难，注意优惠券和产品并不是要全部使用，所以我们只要找同号的数相乘即可。根据排序不等式，两组相同个数的数唯有【大数乘大数，小数乘小数】时乘积之和最大。第一想法就是，先对两组数进行排序，然后均从第一个数开始相乘累加，直到遇见异号数；然后再从最后一个开始相乘累加，同样直到异号数。</p>\n<p>$\\qquad$这里有两个问题：</p>\n<ol>\n<li><p>如果从头和从尾开始都不会遇到异号数，那么部分优惠券和产品会被计算两次</p>\n</li>\n<li><p>如果所有优惠券和产品价格都是同号的，那么先从头开始的时候就会把优惠券用在价格最小的产品上</p>\n</li>\n</ol>\n<p>$\\qquad$Q1只要记住第一次把优惠券用到第几张了即可，Q2其实换一下遍历顺序就好了，即先从最后一个开始累乘相加，然后再从第一个开始。Q2比较容易被忽视，但只要自己多构造几个测试用例就会发现。</p>\n<hr>\n<h2><span id=\"c-d-e\">C ☺ D E</span></h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> m, n;</span><br><span class=\"line\">    cin &gt;&gt; m;</span><br><span class=\"line\">    <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">c</span><span class=\"params\">(m)</span></span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> &amp;k: c)</span><br><span class=\"line\">        cin &gt;&gt; k;</span><br><span class=\"line\">    <span class=\"built_in\">sort</span>(c.<span class=\"built_in\">begin</span>(), c.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">    cin &gt;&gt; n;</span><br><span class=\"line\">    <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">p</span><span class=\"params\">(n)</span></span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> &amp;k: p)</span><br><span class=\"line\">        cin &gt;&gt; k;</span><br><span class=\"line\">    <span class=\"built_in\">sort</span>(p.<span class=\"built_in\">begin</span>(), p.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">    <span class=\"type\">int</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (m -= <span class=\"number\">1</span>, n -= <span class=\"number\">1</span>; m &gt;= <span class=\"number\">0</span> &amp;&amp; n &gt;= <span class=\"number\">0</span>; --m, --n)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ((c[m] ^ p[n]) &gt;= <span class=\"number\">0</span>)</span><br><span class=\"line\">            sum += c[m] * p[n];</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"built_in\">min</span>(m, n); ++i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ((c[i] ^ p[i]) &gt;= <span class=\"number\">0</span>)</span><br><span class=\"line\">            sum += c[i] * p[i];</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cout &lt;&lt; sum &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>$\\qquad$<code>a^b≥0</code>用于判断两数是否同号，本质是判断符号位是否一致。</p>\n","text":"The magic shop in Mars is offering some magic coupons. Each coupon has an integer N printed on it, meaning that when you use this coupon wit...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"PAT（Advanced Level）Practice","slug":"PAT（Advanced-Level）Practice","count":153,"path":"api/categories/PAT（Advanced-Level）Practice.json"}],"tags":[{"name":"C＋＋","slug":"C＋＋","count":160,"path":"api/tags/C＋＋.json"},{"name":"sort","slug":"sort","count":24,"path":"api/tags/sort.json"},{"name":"vector","slug":"vector","count":17,"path":"api/tags/vector.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">Input Specification:</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">Output Specification:</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">Sample Input:</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">Sample Output:</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">Ω</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">C ☺ D E</span></a>","author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}},"mapped":true,"prev_post":{"title":"「1038」Recover the Smallest Number","uid":"f0575046ba6429b64e77d36d9af8e107","slug":"「1038」Recover-the-Smallest-Number","date":"2022-08-19T04:22:22.000Z","updated":"2022-08-19T07:56:15.793Z","comments":true,"path":"api/articles/「1038」Recover-the-Smallest-Number.json","keywords":null,"cover":null,"text":"Given a collection of number segments, you are supposed to recover the smallest number from them. For example, given { 32, 321, 3214, 0229, ...","link":"","photos":[],"count_time":{"symbolsCount":"3.8k","symbolsTime":"3 mins."},"categories":[{"name":"PAT（Advanced Level）Practice","slug":"PAT（Advanced-Level）Practice","count":153,"path":"api/categories/PAT（Advanced-Level）Practice.json"}],"tags":[{"name":"C＋＋","slug":"C＋＋","count":160,"path":"api/tags/C＋＋.json"},{"name":"binary search","slug":"binary-search","count":7,"path":"api/tags/binary-search.json"},{"name":"sort","slug":"sort","count":24,"path":"api/tags/sort.json"},{"name":"vector","slug":"vector","count":17,"path":"api/tags/vector.json"}],"author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}}},"next_post":{"title":"「1036」Boys vs Girls","uid":"26c80e72f01819f2ff80ad4c0899d687","slug":"「1036」Boys-vs-Girls","date":"2022-08-05T13:45:26.000Z","updated":"2022-08-05T15:11:21.524Z","comments":true,"path":"api/articles/「1036」Boys-vs-Girls.json","keywords":null,"cover":null,"text":"This time you are asked to tell the difference between the lowest grade of all the male students and the highest grade of all the female stu...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"PAT（Advanced Level）Practice","slug":"PAT（Advanced-Level）Practice","count":153,"path":"api/categories/PAT（Advanced-Level）Practice.json"}],"tags":[{"name":"C＋＋","slug":"C＋＋","count":160,"path":"api/tags/C＋＋.json"}],"author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}}}}