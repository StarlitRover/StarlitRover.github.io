{"title":"Apply ANN in MNIST","uid":"27d8ddbd7db795b00aa745f14f40ef75","slug":"Apply-ANN-in-MNIST","date":"2022-05-20T03:44:06.000Z","updated":"2022-07-13T16:03:19.229Z","comments":true,"path":"api/articles/Apply-ANN-in-MNIST.json","keywords":null,"cover":null,"content":"<p>$\\qquad$看完了<a href=\"https://www.bilibili.com/video/BV1bx411M7Zx?spm_id_from=333.337.search-card.all.click\">3Blue1Brown的神经网络</a>三部曲，感觉眼睛明亮了，内心更通透了，手指控制不住地就开始跳动。</p>\n<p>$\\qquad$接下来请欣赏寿司神经网络——手写数字集<a href=\"http://yann.lecun.com/exdb/mnist/\">MNIST</a>登场！</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> joblib <span class=\"keyword\">as</span> jb</span><br></pre></td></tr></table></figure>\n\n<span id=\"more\"></span>\n<h3><span id=\"激活函数及导数定义\">激活函数及导数定义</span></h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">Activater</span>(<span class=\"params\">x,option=<span class=\"string\">&#x27;sigmoid&#x27;</span></span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> option==<span class=\"string\">&#x27;relu&#x27;</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> np.maximum(<span class=\"number\">0</span>,x)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> option==<span class=\"string\">&#x27;sigmoid&#x27;</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>/(<span class=\"number\">1</span>+np.exp(-x))</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;WRONG TYPE!!!&quot;</span>)</span><br><span class=\"line\">        exit(<span class=\"number\">0</span>)</span><br></pre></td></tr></table></figure>\n\n<center><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"41.391ex\" height=\"6.785ex\" viewbox=\"0 -1749.5 18294.8 2999\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" aria-hidden=\"true\" style=\"\"><defs><path id=\"MJX-22-TEX-I-1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"/><path id=\"MJX-22-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"/><path id=\"MJX-22-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"/><path id=\"MJX-22-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"/><path id=\"MJX-22-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"/><path id=\"MJX-22-TEX-S4-7B\" d=\"M661 -1243L655 -1249H622L604 -1240Q503 -1190 434 -1107T348 -909Q346 -897 346 -499L345 -98L343 -82Q335 3 287 87T157 223Q146 232 145 236Q144 240 144 250Q144 265 145 268T157 278Q242 333 288 417T343 583L345 600L346 1001Q346 1398 348 1410Q379 1622 600 1739L622 1750H655L661 1744V1727V1721Q661 1712 661 1710T657 1705T648 1700T630 1690T602 1668Q589 1659 574 1643T531 1593T484 1508T459 1398Q458 1389 458 1001Q458 614 457 605Q441 435 301 316Q254 277 202 251L250 222Q260 216 301 185Q443 66 457 -104Q458 -113 458 -501Q458 -888 459 -897Q463 -944 478 -988T509 -1060T548 -1114T580 -1149T602 -1167Q620 -1183 634 -1192T653 -1202T659 -1207T661 -1220V-1226V-1243Z\"/><path id=\"MJX-22-TEX-I-1D70E\" d=\"M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z\"/><path id=\"MJX-22-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"/><path id=\"MJX-22-TEX-N-2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"/><path id=\"MJX-22-TEX-I-1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"/><path id=\"MJX-22-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"/><path id=\"MJX-22-TEX-N-2C\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"/><path id=\"MJX-22-TEX-SS-1D5CC\" d=\"M33 326Q33 376 60 408T117 450T175 460H190Q245 460 272 454T345 429Q345 428 338 388L331 349Q278 386 188 386H183Q119 386 119 336Q119 307 142 295T210 276T278 256Q360 213 360 130Q360 108 354 88T332 43T281 5T195 -10Q152 -10 111 1T49 22T28 35Q29 36 32 56T39 95T43 115T51 110T72 99T102 85T143 73T193 68Q274 68 274 123Q274 152 248 167Q234 178 187 186T115 207Q66 229 46 273Q33 298 33 326Z\"/><path id=\"MJX-22-TEX-SS-1D5C2\" d=\"M67 576V680H171V576H67ZM74 0V444H164V0H74Z\"/><path id=\"MJX-22-TEX-SS-1D5C0\" d=\"M55 286Q55 357 105 406T224 455Q280 455 323 421L322 423L318 427Q318 428 339 434T396 448T465 455H471L478 416L485 377Q484 377 474 379T445 383T401 385Q397 385 391 385T381 384L362 383L357 387Q358 386 364 375T375 354T384 325T389 287Q389 217 340 168T221 119Q178 119 138 142Q133 145 131 143Q125 131 125 117Q125 82 155 72L227 71Q230 71 251 71T280 71T310 69T343 65T373 57T403 46T428 30T449 7Q471 -26 471 -62V-71Q471 -136 384 -178Q326 -206 250 -206Q159 -206 102 -172T30 -92Q28 -84 28 -68T31 -37T40 -12T52 7T64 21T75 31T82 38Q60 68 60 106Q60 145 80 180L86 189L80 199Q55 240 55 286ZM304 233T304 287T279 362T220 383Q189 383 165 361T140 287Q140 243 161 217T220 191Q253 191 278 212ZM250 -134Q298 -134 331 -122T375 -96T387 -69Q387 -21 306 -7Q288 -5 216 -5Q161 -5 153 -7Q146 -9 139 -13T122 -31T113 -66Q113 -75 113 -80T127 -97T166 -121Q203 -134 250 -134Z\"/><path id=\"MJX-22-TEX-SS-1D5C6\" d=\"M160 392Q223 455 304 455Q359 455 386 436T430 383L437 391Q495 455 584 455Q694 455 715 354Q719 331 720 164V0H627V157Q626 315 625 320Q611 378 536 378H530Q501 378 481 358Q457 334 450 301T442 209Q442 198 442 172T443 129V0H350V157Q349 315 348 320Q334 378 259 378H253Q224 378 204 358Q180 334 173 301T165 209Q165 198 165 172T166 129V0H73V450H160V392Z\"/><path id=\"MJX-22-TEX-SS-1D5C8\" d=\"M28 222Q28 323 95 391T244 460Q275 460 281 459Q364 445 417 377T471 219Q471 124 408 57T250 -10Q158 -10 93 57T28 222ZM377 230Q377 277 364 310T328 358T287 379T248 385Q233 385 219 382T186 369T155 342T132 297T122 230Q122 146 159 108T250 69H253Q263 69 274 70T305 81T339 106T365 154T377 230Z\"/><path id=\"MJX-22-TEX-SS-1D5BD\" d=\"M33 224Q33 321 81 388T197 455Q277 455 342 414L351 408V694H441V0H348V44L338 37Q278 -10 198 -10Q177 -10 168 -8Q99 11 62 90Q33 148 33 224ZM348 337Q307 378 263 378Q260 378 256 378T251 379Q239 379 223 374T182 355T142 305T126 220Q126 90 225 67Q231 66 250 66H255Q306 66 342 115L348 124V337Z\"/><path id=\"MJX-22-TEX-B-1D411\" d=\"M394 0Q370 3 222 3Q75 3 51 0H39V62H147V624H39V686H234Q256 686 299 686T362 687Q479 687 554 669T681 593Q716 550 716 497Q716 390 568 338Q569 337 572 336T577 332Q605 317 623 300T650 258T662 218T668 172Q678 98 689 76Q707 40 748 40Q770 40 780 54T795 88T801 111Q805 117 827 117H831Q846 117 852 113T858 92Q857 78 852 63T834 30T797 1T739 -11Q630 -11 580 12T511 87Q506 104 506 168Q506 170 506 178T507 194Q507 289 438 313Q424 318 356 318H298V62H406V0H394ZM366 369Q459 370 490 381Q548 402 548 476V498V517Q548 578 513 600Q479 624 392 624H358H298V369H366Z\"/><path id=\"MJX-22-TEX-B-1D41E\" d=\"M32 225Q32 332 102 392T272 452H283Q382 452 436 401Q494 343 494 243Q494 226 486 222T440 217Q431 217 394 217T327 218H175V209Q175 177 179 154T196 107T236 69T306 50Q312 49 323 49Q376 49 410 85Q421 99 427 111T434 127T442 133T463 135H468Q494 135 494 117Q494 110 489 97T468 66T431 32T373 5T292 -6Q181 -6 107 55T32 225ZM383 276Q377 346 348 374T280 402Q253 402 230 390T195 357Q179 331 176 279V266H383V276Z\"/><path id=\"MJX-22-TEX-B-1D40B\" d=\"M643 285Q641 280 629 148T612 4V0H39V62H147V624H39V686H51Q75 683 228 683Q415 685 425 686H439V624H304V62H352H378Q492 62 539 138Q551 156 558 178T569 214T576 255T581 289H643V285Z\"/><path id=\"MJX-22-TEX-B-1D414\" d=\"M570 686Q588 683 703 683T836 686H845V624H737V420Q737 390 737 345T738 284Q738 205 729 164T689 83Q614 -11 465 -11Q321 -11 240 51T148 207Q147 214 147 421V624H39V686H51Q75 683 226 683Q376 683 400 686H412V624H304V405V370V268Q304 181 311 146T346 87Q387 52 466 52Q642 52 667 195Q668 204 669 415V624H561V686H570Z\"/><path id=\"MJX-22-TEX-N-6D\" d=\"M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z\"/><path id=\"MJX-22-TEX-N-61\" d=\"M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z\"/><path id=\"MJX-22-TEX-N-78\" d=\"M201 0Q189 3 102 3Q26 3 17 0H11V46H25Q48 47 67 52T96 61T121 78T139 96T160 122T180 150L226 210L168 288Q159 301 149 315T133 336T122 351T113 363T107 370T100 376T94 379T88 381T80 383Q74 383 44 385H16V431H23Q59 429 126 429Q219 429 229 431H237V385Q201 381 201 369Q201 367 211 353T239 315T268 274L272 270L297 304Q329 345 329 358Q329 364 327 369T322 376T317 380T310 384L307 385H302V431H309Q324 428 408 428Q487 428 493 431H499V385H492Q443 385 411 368Q394 360 377 341T312 257L296 236L358 151Q424 61 429 57T446 50Q464 46 499 46H516V0H510H502Q494 1 482 1T457 2T432 2T414 3Q403 3 377 3T327 1L304 0H295V46H298Q309 46 320 51T331 63Q331 65 291 120L250 175Q249 174 219 133T185 88Q181 83 181 74Q181 63 188 55T206 46Q208 46 208 23V0H201Z\"/><path id=\"MJX-22-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"/><path id=\"MJX-22-TEX-SS-1D5B1\" d=\"M88 0V694H227H259H302Q365 694 399 689T474 663Q528 637 558 595T589 504Q589 482 584 462T569 426T547 396T522 372T495 353T470 338T449 328T434 322L429 320L440 300Q452 280 477 238T523 160L617 1L565 0Q513 0 512 1Q512 2 424 156L337 309H189V0H88ZM492 504Q492 600 367 620Q354 622 271 623H189V385H271Q363 386 388 392Q432 402 462 430T492 504Z\"/><path id=\"MJX-22-TEX-SS-1D5BE\" d=\"M28 226Q28 329 91 395T235 461Q258 461 279 456T325 436T368 397T399 332T415 238V219H113V215Q113 163 151 114T248 65Q273 65 298 70T341 82T373 96T396 108L403 113Q403 106 406 76T409 38Q409 34 408 33T393 24Q325 -10 252 -10Q155 -10 92 59T28 226ZM340 289L338 297Q335 305 333 310T327 326T317 343T304 358T286 372T263 381T233 385Q212 385 193 376T162 353T140 325T127 301T123 289H340Z\"/><path id=\"MJX-22-TEX-SS-1D5AB\" d=\"M87 0V694H191V79L297 80H451L499 81V0H87Z\"/><path id=\"MJX-22-TEX-SS-1D5B4\" d=\"M87 450V694H191V449Q192 203 193 194Q200 148 220 117T266 72T311 54T347 49Q404 49 446 84T501 178Q505 195 505 218T507 449V694H600V450Q600 414 600 356Q599 198 595 181Q594 178 594 177Q575 89 505 34T345 -22Q258 -22 184 34T89 196Q88 205 87 450Z\"/></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\"><g data-mml-node=\"math\"><g data-mml-node=\"mi\"><use xlink:href=\"#MJX-22-TEX-I-1D453\"/></g><g data-mml-node=\"mo\" transform=\"translate(550, 0)\"><use xlink:href=\"#MJX-22-TEX-N-28\"/></g><g data-mml-node=\"mi\" transform=\"translate(939, 0)\"><use xlink:href=\"#MJX-22-TEX-I-1D465\"/></g><g data-mml-node=\"mo\" transform=\"translate(1511, 0)\"><use xlink:href=\"#MJX-22-TEX-N-29\"/></g><g data-mml-node=\"mo\" transform=\"translate(2177.8, 0)\"><use xlink:href=\"#MJX-22-TEX-N-3D\"/></g><g data-mml-node=\"mrow\" transform=\"translate(3233.6, 0)\"><g data-mml-node=\"mo\"><use xlink:href=\"#MJX-22-TEX-S4-7B\"/></g><g data-mml-node=\"mtable\" transform=\"translate(806, 0)\"><g data-mml-node=\"mtr\" transform=\"translate(0, 719)\"><g data-mml-node=\"mtd\" transform=\"translate(2083.6, 0)\"><g data-mml-node=\"mi\"><use xlink:href=\"#MJX-22-TEX-I-1D70E\"/></g><g data-mml-node=\"mo\" transform=\"translate(571, 0)\"><use xlink:href=\"#MJX-22-TEX-N-28\"/></g><g data-mml-node=\"mi\" transform=\"translate(960, 0)\"><use xlink:href=\"#MJX-22-TEX-I-1D465\"/></g><g data-mml-node=\"mo\" transform=\"translate(1532, 0)\"><use xlink:href=\"#MJX-22-TEX-N-29\"/></g><g data-mml-node=\"mo\" transform=\"translate(2198.8, 0)\"><use xlink:href=\"#MJX-22-TEX-N-3D\"/></g><g data-mml-node=\"mfrac\" transform=\"translate(3254.6, 0)\"><g data-mml-node=\"mn\" transform=\"translate(1015, 394) scale(0.707)\"><use xlink:href=\"#MJX-22-TEX-N-31\"/></g><g data-mml-node=\"mrow\" transform=\"translate(220, -345) scale(0.707)\"><g data-mml-node=\"mn\"><use xlink:href=\"#MJX-22-TEX-N-31\"/></g><g data-mml-node=\"mo\" transform=\"translate(500, 0)\"><use xlink:href=\"#MJX-22-TEX-N-2B\"/></g><g data-mml-node=\"msup\" transform=\"translate(1278, 0)\"><g data-mml-node=\"mi\"><use xlink:href=\"#MJX-22-TEX-I-1D452\"/></g><g data-mml-node=\"TeXAtom\" transform=\"translate(466, 289) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><use xlink:href=\"#MJX-22-TEX-N-2212\"/></g><g data-mml-node=\"mi\" transform=\"translate(778, 0)\"><use xlink:href=\"#MJX-22-TEX-I-1D465\"/></g></g></g></g><rect width=\"2143.5\" height=\"60\" x=\"120\" y=\"220\"/></g><g data-mml-node=\"mo\" transform=\"translate(5638.1, 0)\"><use xlink:href=\"#MJX-22-TEX-N-2C\"/></g></g><g data-mml-node=\"mtd\" transform=\"translate(11083.2, 0)\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use xlink:href=\"#MJX-22-TEX-SS-1D5CC\"/></g><g data-mml-node=\"mi\" transform=\"translate(383, 0)\"><use xlink:href=\"#MJX-22-TEX-SS-1D5C2\"/></g><g data-mml-node=\"mi\" transform=\"translate(622, 0)\"><use xlink:href=\"#MJX-22-TEX-SS-1D5C0\"/></g><g data-mml-node=\"mi\" transform=\"translate(1122, 0)\"><use xlink:href=\"#MJX-22-TEX-SS-1D5C6\"/></g><g data-mml-node=\"mi\" transform=\"translate(1916, 0)\"><use xlink:href=\"#MJX-22-TEX-SS-1D5C8\"/></g><g data-mml-node=\"mi\" transform=\"translate(2416, 0)\"><use xlink:href=\"#MJX-22-TEX-SS-1D5C2\"/></g><g data-mml-node=\"mi\" transform=\"translate(2655, 0)\"><use xlink:href=\"#MJX-22-TEX-SS-1D5BD\"/></g></g></g></g><g data-mml-node=\"mtr\" transform=\"translate(0, -834)\"><g data-mml-node=\"mtd\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use xlink:href=\"#MJX-22-TEX-B-1D411\"/></g><g data-mml-node=\"mi\" transform=\"translate(862, 0)\"><use xlink:href=\"#MJX-22-TEX-B-1D41E\"/></g><g data-mml-node=\"mi\" transform=\"translate(1389, 0)\"><use xlink:href=\"#MJX-22-TEX-B-1D40B\"/></g><g data-mml-node=\"mi\" transform=\"translate(2081, 0)\"><use xlink:href=\"#MJX-22-TEX-B-1D414\"/></g></g><g data-mml-node=\"mo\" transform=\"translate(2966, 0)\"><use xlink:href=\"#MJX-22-TEX-N-28\"/></g><g data-mml-node=\"mi\" transform=\"translate(3355, 0)\"><use xlink:href=\"#MJX-22-TEX-I-1D465\"/></g><g data-mml-node=\"mo\" transform=\"translate(3927, 0)\"><use xlink:href=\"#MJX-22-TEX-N-29\"/></g><g data-mml-node=\"mo\" transform=\"translate(4593.8, 0)\"><use xlink:href=\"#MJX-22-TEX-N-3D\"/></g><g data-mml-node=\"mo\" transform=\"translate(5649.6, 0)\"><use xlink:href=\"#MJX-22-TEX-N-6D\"/><use xlink:href=\"#MJX-22-TEX-N-61\" transform=\"translate(833, 0)\"/><use xlink:href=\"#MJX-22-TEX-N-78\" transform=\"translate(1333, 0)\"/></g><g data-mml-node=\"mo\" transform=\"translate(7510.6, 0)\"><use xlink:href=\"#MJX-22-TEX-N-28\"/></g><g data-mml-node=\"mn\" transform=\"translate(7899.6, 0)\"><use xlink:href=\"#MJX-22-TEX-N-30\"/></g><g data-mml-node=\"mo\" transform=\"translate(8399.6, 0)\"><use xlink:href=\"#MJX-22-TEX-N-2C\"/></g><g data-mml-node=\"mi\" transform=\"translate(8844.2, 0)\"><use xlink:href=\"#MJX-22-TEX-I-1D465\"/></g><g data-mml-node=\"mo\" transform=\"translate(9416.2, 0)\"><use xlink:href=\"#MJX-22-TEX-N-29\"/></g><g data-mml-node=\"mo\" transform=\"translate(9805.2, 0)\"><use xlink:href=\"#MJX-22-TEX-N-2C\"/></g></g><g data-mml-node=\"mtd\" transform=\"translate(11509.2, 0)\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use xlink:href=\"#MJX-22-TEX-SS-1D5B1\"/></g><g data-mml-node=\"mi\" transform=\"translate(646, 0)\"><use xlink:href=\"#MJX-22-TEX-SS-1D5BE\"/></g><g data-mml-node=\"mi\" transform=\"translate(1090, 0)\"><use xlink:href=\"#MJX-22-TEX-SS-1D5AB\"/></g><g data-mml-node=\"mi\" transform=\"translate(1632, 0)\"><use xlink:href=\"#MJX-22-TEX-SS-1D5B4\"/></g></g></g></g></g><g data-mml-node=\"mo\" transform=\"translate(15061.2, 0)\"/></g></g></g></svg></center>\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">Derivative</span>(<span class=\"params\">x,option=<span class=\"string\">&#x27;sigmoid&#x27;</span></span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> option==<span class=\"string\">&#x27;relu&#x27;</span>:</span><br><span class=\"line\">        x[x&gt;<span class=\"number\">0</span>] = <span class=\"number\">1</span></span><br><span class=\"line\">        x[x&lt;=<span class=\"number\">0</span>] = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> x</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> option==<span class=\"string\">&#x27;sigmoid&#x27;</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> np.exp(-x)/((<span class=\"number\">1</span>+np.exp(-x))**<span class=\"number\">2</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;WRONG TYPE!!!&quot;</span>)</span><br><span class=\"line\">        exit(<span class=\"number\">0</span>)</span><br></pre></td></tr></table></figure>\n\n<center><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"29.972ex\" height=\"9.72ex\" viewbox=\"0 -2398.2 13247.6 4296.3\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" aria-hidden=\"true\" style=\"\"><defs><path id=\"MJX-40-TEX-I-1D453\" d=\"M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z\"/><path id=\"MJX-40-TEX-N-2032\" d=\"M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z\"/><path id=\"MJX-40-TEX-N-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"/><path id=\"MJX-40-TEX-I-1D465\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"/><path id=\"MJX-40-TEX-N-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"/><path id=\"MJX-40-TEX-N-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"/><path id=\"MJX-40-TEX-S4-23A7\" d=\"M712 899L718 893V876V865Q718 854 704 846Q627 793 577 710T510 525Q510 524 509 521Q505 493 504 349Q504 345 504 334Q504 277 504 240Q504 -2 503 -4Q502 -8 494 -9T444 -10Q392 -10 390 -9Q387 -8 386 -5Q384 5 384 230Q384 262 384 312T383 382Q383 481 392 535T434 656Q510 806 664 892L677 899H712Z\"/><path id=\"MJX-40-TEX-S4-23A9\" d=\"M718 -893L712 -899H677L666 -893Q542 -825 468 -714T385 -476Q384 -466 384 -282Q384 3 385 5L389 9Q392 10 444 10Q486 10 494 9T503 4Q504 2 504 -239V-310V-366Q504 -470 508 -513T530 -609Q546 -657 569 -698T617 -767T661 -812T699 -843T717 -856T718 -876V-893Z\"/><path id=\"MJX-40-TEX-S4-23A8\" d=\"M389 1159Q391 1160 455 1160Q496 1160 498 1159Q501 1158 502 1155Q504 1145 504 924Q504 691 503 682Q494 549 425 439T243 259L229 250L243 241Q349 175 421 66T503 -182Q504 -191 504 -424Q504 -600 504 -629T499 -659H498Q496 -660 444 -660T390 -659Q387 -658 386 -655Q384 -645 384 -425V-282Q384 -176 377 -116T342 10Q325 54 301 92T255 155T214 196T183 222T171 232Q170 233 170 250T171 268Q171 269 191 284T240 331T300 407T354 524T383 679Q384 691 384 925Q384 1152 385 1155L389 1159Z\"/><path id=\"MJX-40-TEX-S4-23AA\" d=\"M384 150V266Q384 304 389 309Q391 310 455 310Q496 310 498 309Q502 308 503 298Q504 283 504 150Q504 32 504 12T499 -9H498Q496 -10 444 -10T390 -9Q386 -8 385 2Q384 17 384 150Z\"/><path id=\"MJX-40-TEX-I-1D452\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"/><path id=\"MJX-40-TEX-N-2212\" d=\"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z\"/><path id=\"MJX-40-TEX-N-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"/><path id=\"MJX-40-TEX-N-2B\" d=\"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z\"/><path id=\"MJX-40-TEX-N-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"/><path id=\"MJX-40-TEX-SS-1D5CC\" d=\"M33 326Q33 376 60 408T117 450T175 460H190Q245 460 272 454T345 429Q345 428 338 388L331 349Q278 386 188 386H183Q119 386 119 336Q119 307 142 295T210 276T278 256Q360 213 360 130Q360 108 354 88T332 43T281 5T195 -10Q152 -10 111 1T49 22T28 35Q29 36 32 56T39 95T43 115T51 110T72 99T102 85T143 73T193 68Q274 68 274 123Q274 152 248 167Q234 178 187 186T115 207Q66 229 46 273Q33 298 33 326Z\"/><path id=\"MJX-40-TEX-SS-1D5C2\" d=\"M67 576V680H171V576H67ZM74 0V444H164V0H74Z\"/><path id=\"MJX-40-TEX-SS-1D5C0\" d=\"M55 286Q55 357 105 406T224 455Q280 455 323 421L322 423L318 427Q318 428 339 434T396 448T465 455H471L478 416L485 377Q484 377 474 379T445 383T401 385Q397 385 391 385T381 384L362 383L357 387Q358 386 364 375T375 354T384 325T389 287Q389 217 340 168T221 119Q178 119 138 142Q133 145 131 143Q125 131 125 117Q125 82 155 72L227 71Q230 71 251 71T280 71T310 69T343 65T373 57T403 46T428 30T449 7Q471 -26 471 -62V-71Q471 -136 384 -178Q326 -206 250 -206Q159 -206 102 -172T30 -92Q28 -84 28 -68T31 -37T40 -12T52 7T64 21T75 31T82 38Q60 68 60 106Q60 145 80 180L86 189L80 199Q55 240 55 286ZM304 233T304 287T279 362T220 383Q189 383 165 361T140 287Q140 243 161 217T220 191Q253 191 278 212ZM250 -134Q298 -134 331 -122T375 -96T387 -69Q387 -21 306 -7Q288 -5 216 -5Q161 -5 153 -7Q146 -9 139 -13T122 -31T113 -66Q113 -75 113 -80T127 -97T166 -121Q203 -134 250 -134Z\"/><path id=\"MJX-40-TEX-SS-1D5C6\" d=\"M160 392Q223 455 304 455Q359 455 386 436T430 383L437 391Q495 455 584 455Q694 455 715 354Q719 331 720 164V0H627V157Q626 315 625 320Q611 378 536 378H530Q501 378 481 358Q457 334 450 301T442 209Q442 198 442 172T443 129V0H350V157Q349 315 348 320Q334 378 259 378H253Q224 378 204 358Q180 334 173 301T165 209Q165 198 165 172T166 129V0H73V450H160V392Z\"/><path id=\"MJX-40-TEX-SS-1D5C8\" d=\"M28 222Q28 323 95 391T244 460Q275 460 281 459Q364 445 417 377T471 219Q471 124 408 57T250 -10Q158 -10 93 57T28 222ZM377 230Q377 277 364 310T328 358T287 379T248 385Q233 385 219 382T186 369T155 342T132 297T122 230Q122 146 159 108T250 69H253Q263 69 274 70T305 81T339 106T365 154T377 230Z\"/><path id=\"MJX-40-TEX-SS-1D5BD\" d=\"M33 224Q33 321 81 388T197 455Q277 455 342 414L351 408V694H441V0H348V44L338 37Q278 -10 198 -10Q177 -10 168 -8Q99 11 62 90Q33 148 33 224ZM348 337Q307 378 263 378Q260 378 256 378T251 379Q239 379 223 374T182 355T142 305T126 220Q126 90 225 67Q231 66 250 66H255Q306 66 342 115L348 124V337Z\"/><path id=\"MJX-40-TEX-S3-7B\" d=\"M618 -943L612 -949H582L568 -943Q472 -903 411 -841T332 -703Q327 -682 327 -653T325 -350Q324 -28 323 -18Q317 24 301 61T264 124T221 171T179 205T147 225T132 234Q130 238 130 250Q130 255 130 258T131 264T132 267T134 269T139 272T144 275Q207 308 256 367Q310 436 323 519Q324 529 325 851Q326 1124 326 1154T332 1205Q369 1358 566 1443L582 1450H612L618 1444V1429Q618 1413 616 1411L608 1406Q599 1402 585 1393T552 1372T515 1343T479 1305T449 1257T429 1200Q425 1180 425 1152T423 851Q422 579 422 549T416 498Q407 459 388 424T346 364T297 318T250 284T214 264T197 254L188 251L205 242Q290 200 345 138T416 3Q421 -18 421 -48T423 -349Q423 -397 423 -472Q424 -677 428 -694Q429 -697 429 -699Q434 -722 443 -743T465 -782T491 -816T519 -845T548 -868T574 -886T595 -899T610 -908L616 -910Q618 -912 618 -928V-943Z\"/><path id=\"MJX-40-TEX-N-3E\" d=\"M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z\"/><path id=\"MJX-40-TEX-N-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"/><path id=\"MJX-40-TEX-N-2264\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"/><path id=\"MJX-40-TEX-SS-1D5B1\" d=\"M88 0V694H227H259H302Q365 694 399 689T474 663Q528 637 558 595T589 504Q589 482 584 462T569 426T547 396T522 372T495 353T470 338T449 328T434 322L429 320L440 300Q452 280 477 238T523 160L617 1L565 0Q513 0 512 1Q512 2 424 156L337 309H189V0H88ZM492 504Q492 600 367 620Q354 622 271 623H189V385H271Q363 386 388 392Q432 402 462 430T492 504Z\"/><path id=\"MJX-40-TEX-SS-1D5BE\" d=\"M28 226Q28 329 91 395T235 461Q258 461 279 456T325 436T368 397T399 332T415 238V219H113V215Q113 163 151 114T248 65Q273 65 298 70T341 82T373 96T396 108L403 113Q403 106 406 76T409 38Q409 34 408 33T393 24Q325 -10 252 -10Q155 -10 92 59T28 226ZM340 289L338 297Q335 305 333 310T327 326T317 343T304 358T286 372T263 381T233 385Q212 385 193 376T162 353T140 325T127 301T123 289H340Z\"/><path id=\"MJX-40-TEX-SS-1D5AB\" d=\"M87 0V694H191V79L297 80H451L499 81V0H87Z\"/><path id=\"MJX-40-TEX-SS-1D5B4\" d=\"M87 450V694H191V449Q192 203 193 194Q200 148 220 117T266 72T311 54T347 49Q404 49 446 84T501 178Q505 195 505 218T507 449V694H600V450Q600 414 600 356Q599 198 595 181Q594 178 594 177Q575 89 505 34T345 -22Q258 -22 184 34T89 196Q88 205 87 450Z\"/></defs><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\"><g data-mml-node=\"math\"><g data-mml-node=\"msup\"><g data-mml-node=\"mi\"><use xlink:href=\"#MJX-40-TEX-I-1D453\"/></g><g data-mml-node=\"mo\" transform=\"translate(603, 413) scale(0.707)\"><use xlink:href=\"#MJX-40-TEX-N-2032\"/></g></g><g data-mml-node=\"mo\" transform=\"translate(847.5, 0)\"><use xlink:href=\"#MJX-40-TEX-N-28\"/></g><g data-mml-node=\"mi\" transform=\"translate(1236.5, 0)\"><use xlink:href=\"#MJX-40-TEX-I-1D465\"/></g><g data-mml-node=\"mo\" transform=\"translate(1808.5, 0)\"><use xlink:href=\"#MJX-40-TEX-N-29\"/></g><g data-mml-node=\"mo\" transform=\"translate(2475.2, 0)\"><use xlink:href=\"#MJX-40-TEX-N-3D\"/></g><g data-mml-node=\"mrow\" transform=\"translate(3531, 0)\"><g data-mml-node=\"mo\"><use xlink:href=\"#MJX-40-TEX-S4-23A7\" transform=\"translate(0, 1499.2)\"/><use xlink:href=\"#MJX-40-TEX-S4-23A9\" transform=\"translate(0, -999.2)\"/><use xlink:href=\"#MJX-40-TEX-S4-23A8\" transform=\"translate(0, 0)\"/><svg width=\"889\" height=\"529.2\" y=\"1060\" x=\"0\" viewbox=\"0 93.3 889 529.2\"><use xlink:href=\"#MJX-40-TEX-S4-23AA\" transform=\"scale(1, 2.602)\"/></svg><svg width=\"889\" height=\"529.2\" y=\"-1089.2\" x=\"0\" viewbox=\"0 93.3 889 529.2\"><use xlink:href=\"#MJX-40-TEX-S4-23AA\" transform=\"scale(1, 2.602)\"/></svg></g><g data-mml-node=\"mtable\" transform=\"translate(889, 0)\"><g data-mml-node=\"mtr\" transform=\"translate(0, 1456)\"><g data-mml-node=\"mtd\" transform=\"translate(718.3, 0)\"><g data-mml-node=\"mfrac\"><g data-mml-node=\"msup\" transform=\"translate(1089.6, 394) scale(0.707)\"><g data-mml-node=\"mi\"><use xlink:href=\"#MJX-40-TEX-I-1D452\"/></g><g data-mml-node=\"TeXAtom\" transform=\"translate(466, 363) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><use xlink:href=\"#MJX-40-TEX-N-2212\"/></g><g data-mml-node=\"mi\" transform=\"translate(778, 0)\"><use xlink:href=\"#MJX-40-TEX-I-1D465\"/></g></g></g><g data-mml-node=\"mrow\" transform=\"translate(220, -377.4) scale(0.707)\"><g data-mml-node=\"mo\"><use xlink:href=\"#MJX-40-TEX-N-28\"/></g><g data-mml-node=\"mn\" transform=\"translate(389, 0)\"><use xlink:href=\"#MJX-40-TEX-N-31\"/></g><g data-mml-node=\"mo\" transform=\"translate(889, 0)\"><use xlink:href=\"#MJX-40-TEX-N-2B\"/></g><g data-mml-node=\"msup\" transform=\"translate(1667, 0)\"><g data-mml-node=\"mi\"><use xlink:href=\"#MJX-40-TEX-I-1D452\"/></g><g data-mml-node=\"TeXAtom\" transform=\"translate(466, 289) scale(0.707)\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mo\"><use xlink:href=\"#MJX-40-TEX-N-2212\"/></g><g data-mml-node=\"mi\" transform=\"translate(778, 0)\"><use xlink:href=\"#MJX-40-TEX-I-1D465\"/></g></g></g><g data-mml-node=\"msup\" transform=\"translate(3137.6, 0)\"><g data-mml-node=\"mo\"><use xlink:href=\"#MJX-40-TEX-N-29\"/></g><g data-mml-node=\"mn\" transform=\"translate(389, 289) scale(0.707)\"><use xlink:href=\"#MJX-40-TEX-N-32\"/></g></g></g><rect width=\"2979\" height=\"60\" x=\"120\" y=\"220\"/></g></g><g data-mml-node=\"mtd\" transform=\"translate(5655.6, 0)\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use xlink:href=\"#MJX-40-TEX-SS-1D5CC\"/></g><g data-mml-node=\"mi\" transform=\"translate(383, 0)\"><use xlink:href=\"#MJX-40-TEX-SS-1D5C2\"/></g><g data-mml-node=\"mi\" transform=\"translate(622, 0)\"><use xlink:href=\"#MJX-40-TEX-SS-1D5C0\"/></g><g data-mml-node=\"mi\" transform=\"translate(1122, 0)\"><use xlink:href=\"#MJX-40-TEX-SS-1D5C6\"/></g><g data-mml-node=\"mi\" transform=\"translate(1916, 0)\"><use xlink:href=\"#MJX-40-TEX-SS-1D5C8\"/></g><g data-mml-node=\"mi\" transform=\"translate(2416, 0)\"><use xlink:href=\"#MJX-40-TEX-SS-1D5C2\"/></g><g data-mml-node=\"mi\" transform=\"translate(2655, 0)\"><use xlink:href=\"#MJX-40-TEX-SS-1D5BD\"/></g></g></g></g><g data-mml-node=\"mtr\" transform=\"translate(0, -948.2)\"><g data-mml-node=\"mtd\"><g data-mml-node=\"mrow\"><g data-mml-node=\"mo\"><use xlink:href=\"#MJX-40-TEX-S3-7B\"/></g><g data-mml-node=\"mtable\" transform=\"translate(750, 0)\"><g data-mml-node=\"mtr\" transform=\"translate(0, 700)\"><g data-mml-node=\"mtd\"><g data-mml-node=\"mn\"><use xlink:href=\"#MJX-40-TEX-N-31\"/></g></g><g data-mml-node=\"mtd\" transform=\"translate(1500, 0)\"><g data-mml-node=\"mi\"><use xlink:href=\"#MJX-40-TEX-I-1D465\"/></g><g data-mml-node=\"mo\" transform=\"translate(849.8, 0)\"><use xlink:href=\"#MJX-40-TEX-N-3E\"/></g><g data-mml-node=\"mn\" transform=\"translate(1905.6, 0)\"><use xlink:href=\"#MJX-40-TEX-N-30\"/></g></g></g><g data-mml-node=\"mtr\" transform=\"translate(0, -700)\"><g data-mml-node=\"mtd\"><g data-mml-node=\"mn\"><use xlink:href=\"#MJX-40-TEX-N-30\"/></g></g><g data-mml-node=\"mtd\" transform=\"translate(1500, 0)\"><g data-mml-node=\"mi\"><use xlink:href=\"#MJX-40-TEX-I-1D465\"/></g><g data-mml-node=\"mo\" transform=\"translate(849.8, 0)\"><use xlink:href=\"#MJX-40-TEX-N-2264\"/></g><g data-mml-node=\"mn\" transform=\"translate(1905.6, 0)\"><use xlink:href=\"#MJX-40-TEX-N-30\"/></g></g></g></g><g data-mml-node=\"mo\" transform=\"translate(4655.6, 0)\"/></g></g><g data-mml-node=\"mtd\" transform=\"translate(6081.6, 0)\"><g data-mml-node=\"TeXAtom\" data-mjx-texclass=\"ORD\"><g data-mml-node=\"mi\"><use xlink:href=\"#MJX-40-TEX-SS-1D5B1\"/></g><g data-mml-node=\"mi\" transform=\"translate(646, 0)\"><use xlink:href=\"#MJX-40-TEX-SS-1D5BE\"/></g><g data-mml-node=\"mi\" transform=\"translate(1090, 0)\"><use xlink:href=\"#MJX-40-TEX-SS-1D5AB\"/></g><g data-mml-node=\"mi\" transform=\"translate(1632, 0)\"><use xlink:href=\"#MJX-40-TEX-SS-1D5B4\"/></g></g></g></g></g><g data-mml-node=\"mo\" transform=\"translate(9716.6, 0)\"/></g></g></g></svg></center>\n\n<h3><span id=\"前向传播\">前向传播</span></h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">forward_propagation</span>(<span class=\"params\">X, W, b, option=<span class=\"string\">&#x27;sigmoid&#x27;</span></span>):</span><br><span class=\"line\">    Z = []</span><br><span class=\"line\">    A = [X]</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(W)):</span><br><span class=\"line\">        Z.append(np.dot(W[i], A[i]) + b[i])</span><br><span class=\"line\">        A.append(Activater(Z[i],option))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Z, A</span><br></pre></td></tr></table></figure>\n\n<p>$$<br>A_{i+1}&#x3D;f(Z_{i+1})&#x3D;f(WA_i+b)\\ ,\\ Z&#x3D;[Z_2,Z_3,\\cdots,Z_L]\\ ,\\ A&#x3D;[X,A_2,A_3,\\cdots,A_L]<br>$$</p>\n<h3><span id=\"反向传播\">反向传播</span></h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">backward_propagation</span>(<span class=\"params\">Y, Z, A, W, b, option=<span class=\"string\">&#x27;sigmoid&#x27;</span></span>):</span><br><span class=\"line\">    dZ = [[] <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(Z))]</span><br><span class=\"line\">    dW = [np.zeros(W[i].shape) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(W))]</span><br><span class=\"line\">    db = [[] <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(b))]</span><br><span class=\"line\">    dA = [[] <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(A)-<span class=\"number\">1</span>)]</span><br><span class=\"line\">    dA[-<span class=\"number\">1</span>] = <span class=\"number\">2</span>*(A[-<span class=\"number\">1</span>] - Y)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(W) - <span class=\"number\">1</span>, -<span class=\"number\">1</span>, -<span class=\"number\">1</span>):</span><br><span class=\"line\">        dZ[i] = dA[i] * Derivative(Z[i],option)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(dZ[i].shape[<span class=\"number\">1</span>]):</span><br><span class=\"line\">            dW[i] += dZ[i][:,j:(j+<span class=\"number\">1</span>)].dot(A[i][:,j:(j+<span class=\"number\">1</span>)].T)</span><br><span class=\"line\">        dW[i] /= dZ[i].shape[<span class=\"number\">1</span>]</span><br><span class=\"line\">        db[i] = np.<span class=\"built_in\">sum</span>(dZ[i], axis=<span class=\"number\">1</span>, keepdims=<span class=\"literal\">True</span>) / dZ[i].shape[<span class=\"number\">1</span>]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> i&gt;<span class=\"number\">0</span>:</span><br><span class=\"line\">            dA[i-<span class=\"number\">1</span>] = np.dot(W[i].T, dZ[i])</span><br><span class=\"line\">    <span class=\"keyword\">return</span> dW, db</span><br></pre></td></tr></table></figure>\n\n<h3><span id=\"误差函数\">误差函数</span></h3><p>$$<br>C&#x3D;\\sum_{k&#x3D;0}^{n_L-1}(a^L_k-y_k)^2<br>$$<br><br></p>\n<h3><span id=\"反向传播链式法则\">反向传播链式法则</span></h3><p>$$<br>\\frac{\\partial C}{\\partial a^L_k}&#x3D;2(a_k^L-y_k)\\ ,\\<br>\\frac{\\partial C}{\\partial z^L_k}&#x3D;\\frac{\\partial C}{\\partial a^L_k}\\cdot \\frac{\\partial a^L_k}{\\partial z^L_k}&#x3D;2(a_k^L-y_k)\\cdot f’(z^L_k)<br>$$</p>\n<p>$$<br>\\frac{\\partial C}{\\partial w^{L-1}_ {ik}}&#x3D;\\frac{\\partial C}{\\partial a^L_k}\\cdot \\frac{\\partial a^L_k}{\\partial z^L_k}\\cdot \\frac{\\partial z^L_k}{\\partial w^{L-1}_{ik}}&#x3D;2(a _k^L-y _k)\\cdot f’(z^L _k)\\cdot a^{L-1} _i<br>$$</p>\n<p>$$<br>\\frac{\\partial C}{\\partial b^{L-1} _k}&#x3D;\\frac{\\partial C}{\\partial a^L _k}\\cdot \\frac{\\partial a^L _k}{\\partial z^L _k}\\cdot \\frac{\\partial z^L _k}{\\partial b^{L-1} _k}&#x3D;2(a _k^L-y _k)\\cdot f’(z^L _k)\\cdot 1<br>$$</p>\n<p>$$<br>\\frac{\\partial C}{\\partial a^{L-1} _i}&#x3D;\\sum _{k&#x3D;0}^{n _L-1}\\frac{\\partial C}{\\partial z^L _k}\\cdot \\frac{\\partial z^L _k}{\\partial a^{L-1} _i}&#x3D;\\sum _{k&#x3D;0}^{n _L-1} 2(a _k^L-y _k)\\cdot f’(z^L _k)\\cdot w^{L-1} _{ik}<br>$$</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">update_parameters</span>(<span class=\"params\">W, b, dW, db, learning_rate=<span class=\"number\">1e-3</span></span>):</span><br><span class=\"line\">    W = [W[i] - learning_rate * dW[i] <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(W))]</span><br><span class=\"line\">    b = [b[i] - learning_rate * db[i] <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(b))]</span><br><span class=\"line\">    <span class=\"keyword\">return</span> W, b</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">Train</span>(<span class=\"params\">X, Y, W, b, epochs=<span class=\"number\">300</span>, option=<span class=\"string\">&#x27;sigmoid&#x27;</span></span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Training...&quot;</span>)</span><br><span class=\"line\">    sum_10epoches=<span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(epochs):</span><br><span class=\"line\">        <span class=\"built_in\">sum</span>=<span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(X)):</span><br><span class=\"line\">            Z, A = forward_propagation(X[j], W, b, option)</span><br><span class=\"line\">            <span class=\"built_in\">sum</span> += np.<span class=\"built_in\">sum</span>(np.square(A[-<span class=\"number\">1</span>]-Y[j]))</span><br><span class=\"line\">            dW, db = backward_propagation(Y[j], Z, A, W, b, option)</span><br><span class=\"line\">            W, b = update_parameters(W, b, dW, db)</span><br><span class=\"line\"></span><br><span class=\"line\">        sum_10epoches += <span class=\"built_in\">sum</span>/<span class=\"built_in\">len</span>(X)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i+<span class=\"number\">1</span>) % <span class=\"number\">10</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Epoch %d DONE , average loss: %f&quot;</span>%((i+<span class=\"number\">1</span>), sum_10epoches/<span class=\"number\">10</span>))</span><br><span class=\"line\">            sum_10epoches = <span class=\"number\">0</span></span><br><span class=\"line\">            <span class=\"comment\"># save outcome</span></span><br><span class=\"line\">            jb.dump(W, <span class=\"string\">&#x27;weight.pkl&#x27;</span>)</span><br><span class=\"line\">            jb.dump(b, <span class=\"string\">&#x27;b.pkl&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> W, b</span><br></pre></td></tr></table></figure>\n\n\n<h3><span id=\"预测函数\">预测函数</span></h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">predict</span>(<span class=\"params\">X, W, b, option=<span class=\"string\">&#x27;sigmoid&#x27;</span></span>):</span><br><span class=\"line\">    Z, A = forward_propagation(X, W, b, option)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> [np.argmax(A[-<span class=\"number\">1</span>][:,i]) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(A[-<span class=\"number\">1</span>].shape[<span class=\"number\">1</span>])]</span><br></pre></td></tr></table></figure>\n\n<h3><span id=\"指定每层神经元个数并初始化权重w和bias\">指定每层神经元个数，并初始化权重W和bias</span></h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># intialize W &amp; b</span></span><br><span class=\"line\">layers_dims = [<span class=\"number\">784</span>,<span class=\"number\">100</span>,<span class=\"number\">16</span>,<span class=\"number\">10</span>]</span><br><span class=\"line\">W=[]</span><br><span class=\"line\">b=[]</span><br><span class=\"line\"><span class=\"comment\"># He initialization</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,<span class=\"built_in\">len</span>(layers_dims)):</span><br><span class=\"line\">    W.append(np.random.randn(layers_dims[i], layers_dims[i - <span class=\"number\">1</span>]) * np.sqrt(<span class=\"number\">2</span> / layers_dims[i - <span class=\"number\">1</span>]))</span><br><span class=\"line\">    b.append(np.zeros((layers_dims[i], <span class=\"number\">1</span>)))</span><br></pre></td></tr></table></figure>\n\n<h3><span id=\"train\">Train！</span></h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Train</span></span><br><span class=\"line\">data=pd.read_csv(<span class=\"string\">&quot;../input/ml2021-2022-2-nn/train.csv&quot;</span>)</span><br><span class=\"line\">train=np.array(data.iloc[:,<span class=\"number\">1</span>:]) / <span class=\"number\">255</span></span><br><span class=\"line\">label=data.iloc[:,<span class=\"number\">0</span>]</span><br><span class=\"line\">batches=[]</span><br><span class=\"line\">batch_size=<span class=\"number\">10</span></span><br><span class=\"line\">vals=[]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>,<span class=\"built_in\">int</span>(data.shape[<span class=\"number\">0</span>]/batch_size)):</span><br><span class=\"line\">    batches.append(train[i*batch_size:(i+<span class=\"number\">1</span>)*batch_size].T)</span><br><span class=\"line\">    vals.append(np.zeros((layers_dims[-<span class=\"number\">1</span>],batch_size)))</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(batch_size):</span><br><span class=\"line\">        vals[i][label[i*batch_size+j],j]=<span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">W,b=Train(batches,vals,W,b)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Training...</span><br><span class=\"line\">Epoch 10 DONE , average loss: 9.178379</span><br><span class=\"line\">Epoch 20 DONE , average loss: 8.475545</span><br><span class=\"line\">Epoch 30 DONE , average loss: 7.614375</span><br><span class=\"line\">Epoch 40 DONE , average loss: 6.724141</span><br><span class=\"line\">Epoch 50 DONE , average loss: 5.594986</span><br><span class=\"line\">Epoch 60 DONE , average loss: 4.538067</span><br><span class=\"line\">Epoch 70 DONE , average loss: 3.720301</span><br><span class=\"line\">Epoch 80 DONE , average loss: 3.125564</span><br><span class=\"line\">Epoch 90 DONE , average loss: 2.718955</span><br><span class=\"line\">Epoch 100 DONE , average loss: 2.435576</span><br><span class=\"line\">Epoch 110 DONE , average loss: 2.230198</span><br><span class=\"line\">Epoch 120 DONE , average loss: 2.075574</span><br><span class=\"line\">Epoch 130 DONE , average loss: 1.954850</span><br><span class=\"line\">Epoch 140 DONE , average loss: 1.857425</span><br><span class=\"line\">Epoch 150 DONE , average loss: 1.776534</span><br><span class=\"line\">Epoch 160 DONE , average loss: 1.707753</span><br><span class=\"line\">Epoch 170 DONE , average loss: 1.648106</span><br><span class=\"line\">Epoch 180 DONE , average loss: 1.595520</span><br><span class=\"line\">Epoch 190 DONE , average loss: 1.548511</span><br><span class=\"line\">Epoch 200 DONE , average loss: 1.505992</span><br><span class=\"line\">Epoch 210 DONE , average loss: 1.467156</span><br><span class=\"line\">Epoch 220 DONE , average loss: 1.431390</span><br><span class=\"line\">Epoch 230 DONE , average loss: 1.398221</span><br><span class=\"line\">Epoch 240 DONE , average loss: 1.367273</span><br><span class=\"line\">Epoch 250 DONE , average loss: 1.338241</span><br><span class=\"line\">Epoch 260 DONE , average loss: 1.310877</span><br><span class=\"line\">Epoch 270 DONE , average loss: 1.284973</span><br><span class=\"line\">Epoch 280 DONE , average loss: 1.260356</span><br><span class=\"line\">Epoch 290 DONE , average loss: 1.236881</span><br><span class=\"line\">Epoch 300 DONE , average loss: 1.214426</span><br></pre></td></tr></table></figure>\n\n<h3><span id=\"predict\">Predict !!</span></h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># predict</span></span><br><span class=\"line\">test=np.array(pd.read_csv(<span class=\"string\">&quot;../input/ml2021-2022-2-nn/test.csv&quot;</span>)).T / <span class=\"number\">255</span></span><br><span class=\"line\">pre_otc=predict(test,W,b,<span class=\"string\">&#x27;sigmoid&#x27;</span>)</span><br><span class=\"line\">sub=np.array([<span class=\"built_in\">range</span>(test.shape[<span class=\"number\">1</span>]),pre_otc]).T</span><br><span class=\"line\">sub=pd.DataFrame(sub,columns=[<span class=\"string\">&#x27;id&#x27;</span>,<span class=\"string\">&#x27;label&#x27;</span>])</span><br><span class=\"line\">sub.to_csv(<span class=\"string\">&#x27;submission.csv&#x27;</span>,index=<span class=\"literal\">False</span>, header=<span class=\"literal\">True</span>)</span><br></pre></td></tr></table></figure>\n","text":"$\\qquad$看完了3Blue1Brown的神经网络三部曲，感觉眼睛明亮了，内心更通透了，手指控制不住地就开始跳动。 $\\qquad$接下来请欣赏寿司神经网络——手写数字集MNIST登场！ 123import numpy as npimport pandas as pdimpo...","link":"","photos":[],"count_time":{"symbolsCount":"6.1k","symbolsTime":"6 mins."},"categories":[{"name":"Machine Learning","slug":"Machine-Learning","count":3,"path":"api/categories/Machine-Learning.json"}],"tags":[{"name":"走码观花","slug":"走码观花","count":15,"path":"api/tags/走码观花.json"},{"name":"python","slug":"python","count":11,"path":"api/tags/python.json"},{"name":"ANN","slug":"ANN","count":1,"path":"api/tags/ANN.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">激活函数及导数定义</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">前向传播</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">反向传播</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">误差函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">反向传播链式法则</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">预测函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">指定每层神经元个数，并初始化权重W和bias</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">Train！</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">Predict !!</span></a></li></ol>","author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}},"mapped":true,"prev_post":{"title":"Lexer（Ver. Hand）","uid":"e7d5cd857c1aa61505680c49d614561a","slug":"Lexer（Ver-Hand）","date":"2022-05-29T16:39:19.000Z","updated":"2022-07-17T16:52:30.380Z","comments":true,"path":"api/articles/Lexer（Ver-Hand）.json","keywords":null,"cover":[],"text":"$\\qquad$本文介绍如何手撕词法分析器，整体来说难度不大，还是文件读取麻烦。 lexer.h12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505...","link":"","photos":[],"count_time":{"symbolsCount":"16k","symbolsTime":"15 mins."},"categories":[{"name":"编译原理","slug":"编译原理","count":7,"path":"api/categories/编译原理.json"}],"tags":[{"name":"走码观花","slug":"走码观花","count":15,"path":"api/tags/走码观花.json"},{"name":"C＋＋","slug":"C＋＋","count":160,"path":"api/tags/C＋＋.json"}],"author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}}},"next_post":{"title":"<10> NO Left Recursion","uid":"0ec694a906049225d6d529b78f724448","slug":"10-NO-Left-Recursion","date":"2022-05-17T07:58:36.000Z","updated":"2022-06-21T07:50:59.594Z","comments":true,"path":"api/articles/10-NO-Left-Recursion.json","keywords":null,"cover":[],"text":"$\\qquad$本文介绍消除文法左递归的算法，并输出新文法产生式。 $\\qquad$消除左递归在语法分析阶段是比较重要的一个过程，尤其在自顶向下的分析过程中，编译器会尝试各个推导式，如果存在左递归，那么推导过程将会用永无止境。 $\\qquad$比较显式的左递归我们称之为直接左递归...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"编译原理","slug":"编译原理","count":7,"path":"api/categories/编译原理.json"}],"tags":[{"name":"走码观花","slug":"走码观花","count":15,"path":"api/tags/走码观花.json"},{"name":"python","slug":"python","count":11,"path":"api/tags/python.json"}],"author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}}}}