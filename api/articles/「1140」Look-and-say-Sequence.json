{"title":"「1140」Look-and-say Sequence","uid":"7df29c755cdde6fc07511e582be256da","slug":"「1140」Look-and-say-Sequence","date":"2022-11-26T05:03:10.000Z","updated":"2022-11-26T07:23:43.651Z","comments":true,"path":"api/articles/「1140」Look-and-say-Sequence.json","keywords":null,"cover":null,"content":"<p>Look-and-say sequence is a sequence of integers as the following:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">D, D1, D111, D113, D11231, D112213111, ...</span><br></pre></td></tr></table></figure>\n\n<p>where <code>D</code> is in [0, 9] except 1. The (n+1)st number is a kind of description of the nth number. For example, the 2nd number means that there is one <code>D</code> in the 1st number, and hence it is <code>D1</code>; the 2nd number consists of one <code>D</code> (corresponding to <code>D1</code>) and one 1 (corresponding to 11), therefore the 3rd number is <code>D111</code>; or since the 4th number is <code>D113</code>, it consists of one <code>D</code>, two 1’s, and one 3, so the next number must be <code>D11231</code>. This definition works for <code>D</code> &#x3D; 1 as well. Now you are supposed to calculate the Nth number in a look-and-say sequence of a given digit <code>D</code>.</p>\n<span id=\"more\"></span>\n\n<!--more-->\n\n<h3><span id=\"input-specification\">Input Specification:</span></h3><p>Each input file contains one test case, which gives <code>D</code> (in [0, 9]) and a positive integer N (≤ 40), separated by a space.</p>\n<h3><span id=\"output-specification\">Output Specification:</span></h3><p>Print in a line the Nth number in a look-and-say sequence of <code>D</code>.</p>\n<h3><span id=\"sample-input\">Sample Input:</span></h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 8</span><br></pre></td></tr></table></figure>\n\n<h3><span id=\"sample-output\">Sample Output:</span></h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1123123111</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2><span id=\"ω\">Ω</span></h2><p>$\\qquad$字符串迭代，每次迭代的规则，是将原字符串中的连续子串“xx…x”替换为“xn”，n表示最长连续子串中x的个数。那么只需遍历字符串，若当前字符与前一个字符不同，就把前一个字符与cnt加到结果字符串中，同时将计数器cnt归1，若相同则++cnt。</p>\n<hr>\n<h2><span id>🐎</span></h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    string ans, nxt;</span><br><span class=\"line\">    <span class=\"type\">int</span> n, cnt = <span class=\"number\">1</span>;</span><br><span class=\"line\">    cin &gt;&gt; ans &gt;&gt; n;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; n; ++i, cnt = <span class=\"number\">1</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt; ans.<span class=\"built_in\">size</span>(); ++j)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (ans[j] != ans[j - <span class=\"number\">1</span>])</span><br><span class=\"line\">                nxt += <span class=\"built_in\">string</span>(<span class=\"number\">1</span>, ans[j - <span class=\"number\">1</span>]) + <span class=\"built_in\">to_string</span>(cnt), cnt = <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> ++cnt;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        nxt += <span class=\"built_in\">string</span>(<span class=\"number\">1</span>, ans.<span class=\"built_in\">back</span>()) + <span class=\"built_in\">to_string</span>(cnt);</span><br><span class=\"line\">        ans = std::<span class=\"built_in\">move</span>(nxt), nxt = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cout &lt;&lt; ans;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","text":"Look-and-say sequence is a sequence of integers as the following: 1D, D1, D111, D113, D11231, D112213111, ... where D is in [0, 9] except 1....","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"PAT（Advanced Level）Practice","slug":"PAT（Advanced-Level）Practice","count":153,"path":"api/categories/PAT（Advanced-Level）Practice.json"}],"tags":[{"name":"C＋＋","slug":"C＋＋","count":160,"path":"api/tags/C＋＋.json"},{"name":"string","slug":"string","count":18,"path":"api/tags/string.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">Input Specification:</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">Output Specification:</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">Sample Input:</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">Sample Output:</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">Ω</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">🐎</span></a>","author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}},"mapped":true,"prev_post":{"title":"『1141』PAT Ranking of Institutions","uid":"324ab5351ee7cff7d5b7ed1cb7ec626b","slug":"『1141』PAT-Ranking-of-Institutions","date":"2022-11-26T07:20:45.000Z","updated":"2022-11-26T07:33:43.168Z","comments":true,"path":"api/articles/『1141』PAT-Ranking-of-Institutions.json","keywords":null,"cover":null,"text":"After each PAT, the PAT Center will announce the ranking of institutions based on their students’ performances. Now you are asked to generat...","link":"","photos":[],"count_time":{"symbolsCount":"4k","symbolsTime":"4 mins."},"categories":[{"name":"PAT（Advanced Level）Practice","slug":"PAT（Advanced-Level）Practice","count":153,"path":"api/categories/PAT（Advanced-Level）Practice.json"}],"tags":[{"name":"C＋＋","slug":"C＋＋","count":160,"path":"api/tags/C＋＋.json"},{"name":"map","slug":"map","count":25,"path":"api/tags/map.json"},{"name":"sort","slug":"sort","count":24,"path":"api/tags/sort.json"},{"name":"tuple","slug":"tuple","count":9,"path":"api/tags/tuple.json"}],"author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}}},"next_post":{"title":"「1139」First Contact","uid":"8e874153b53000d75be72bb73b703255","slug":"「1139」First-Contact","date":"2022-11-25T17:09:15.000Z","updated":"2022-11-27T04:00:37.308Z","comments":true,"path":"api/articles/「1139」First-Contact.json","keywords":null,"cover":null,"text":"Unlike in nowadays, the way that boys and girls expressing their feelings of love was quite subtle in the early years. When a boy A had a cr...","link":"","photos":[],"count_time":{"symbolsCount":"4.3k","symbolsTime":"4 mins."},"categories":[{"name":"PAT（Advanced Level）Practice","slug":"PAT（Advanced-Level）Practice","count":153,"path":"api/categories/PAT（Advanced-Level）Practice.json"}],"tags":[{"name":"C＋＋","slug":"C＋＋","count":160,"path":"api/tags/C＋＋.json"},{"name":"Graph","slug":"Graph","count":16,"path":"api/tags/Graph.json"}],"author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}}}}