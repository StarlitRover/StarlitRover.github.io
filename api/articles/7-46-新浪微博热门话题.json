{"title":"7-46 新浪微博热门话题","uid":"44dec690db2bddd5b1d02e910fef2f3a","slug":"7-46-新浪微博热门话题","date":"2022-02-06T13:21:31.000Z","updated":"2022-11-26T06:48:12.333Z","comments":true,"path":"api/articles/7-46-新浪微博热门话题.json","keywords":null,"cover":[],"content":"<p><a href=\"https://pintia.cn/problem-sets/15/problems/893\">➳ENTRY</a><br>$\\qquad$新浪微博可以在发言中嵌入“话题”，即将发言中的话题文字写在一对“#”之间，就可以生成话题链接，点击链接可以看到有多少人在跟自己讨论相同或者相似的话题。新浪微博还会随时更新热门话题列表，并将最热门的话题放在醒目的位置推荐大家关注。</p>\n<p>$\\qquad$本题目要求实现一个简化的热门话题推荐功能，从大量英文（因为中文分词处理比较麻烦）微博中解析出话题，找出被最多条微博提到的话题。</p>\n<h2><span id=\"输入格式\">输入格式:</span></h2><p>$\\qquad$输入说明：输入首先给出一个正整数N（≤$10^5$），随后N行，每行给出一条英文微博，其长度不超过140个字符。任何包含在一对最近的#中的内容均被认为是一个话题，输入保证#成对出现。</p>\n<span id=\"more\"></span>\n\n<h2><span id=\"输出格式\">输出格式:</span></h2><p>$\\qquad$第一行输出被最多条微博提到的话题，第二行输出其被提到的微博条数。<mark>如果这样的话题不唯一</mark>，则输出按字母序最小的话题，并在第三行输出And k more …，其中k是另外几条热门话题的条数。输入保证至少存在一条话题。</p>\n<ul>\n<li><big><strong>注意</strong></big>：两条话题被认为是相同的，如果在去掉所有非英文字母和数字的符号、并忽略大小写区别后，它们是相同的字符串；同时它们有完全相同的分词。输出时除首字母大写外，只保留小写英文字母和数字，并用 <strong>一 个 空 格</strong> 分隔原文中的单词。</li>\n</ul>\n<h2><span id=\"输入样例\">输入样例:</span></h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4</span><br><span class=\"line\">This is a #test of topic#.</span><br><span class=\"line\">Another #Test of topic.#</span><br><span class=\"line\">This is a #Hot# #Hot# topic</span><br><span class=\"line\">Another #hot!# #Hot# topic</span><br></pre></td></tr></table></figure>\n\n<h2><span id=\"输出样例\">输出样例:</span></h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Hot</span><br><span class=\"line\">2</span><br><span class=\"line\">And 1 more ...</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2><span id=\"ω\">Ω</span></h2><p>$\\qquad$第一次提交…</p>\n<p><img src=\"/images/PTA-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E9%A2%98%E7%9B%AE%E9%9B%86/7-46/otc1.png\"><br>$\\qquad$可以接受的啦，毕竟</p>\n<p>$\\qquad\\qquad$<em><strong>AC只是coding中的冰淇淋，debug才是coding的正餐。</strong></em></p>\n<p align=\"right\">——沃滋基硕德$\\qquad\\qquad$ </p>\n$\\qquad$本题满分30分，我已经拿到了20分，看来 大势已去，让我们看下一题 又是一些非常微小的细节所导致的错误。\n$\\qquad$通过仔细阅读题目，不难发现【注意】里面有一句非常显眼的话说要用 **一 个 空 格** 分隔单词。\n$\\qquad$So easy的啦～读到空格的时候把后面的分隔符全部读掉就完事了。\n\n<p>$\\qquad$哦对，空格可能在开头<br>$\\qquad$哦对，非英文字母和数字的符号也会分隔<br>$\\qquad$哦对，空格后面还可能是结束符’#’<br>$\\qquad$哦对，会不会’#’之间只有空格呢😅</p>\n<p>$\\qquad$[小手一点]</p>\n<p><img src=\"/images/PTA-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E9%A2%98%E7%9B%AE%E9%9B%86/7-46/otc2.png\"><br>$\\qquad$可以接受的啦，就差4分了呢~<br>$\\qquad\\qquad$。<br>$\\qquad\\qquad$。<br>$\\qquad\\qquad$。<br>$\\qquad$Ten minutes later…</p>\n<p><img src=\"/images/PTA-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E9%A2%98%E7%9B%AE%E9%9B%86/7-46/bye.png\"></p>\n<p>$\\qquad$不科学啊，一个话题的情况怎么会出错呢，我试了∞个输入了</p>\n<p>$\\qquad$最后，我在网上找到别人AC的码来自己测试，刚输完一个人就傻了😅 通过更加仔细地阅读题目，不难发现 “如果这样的话题不唯一，则输出按字母序最小的话题，并在第三行输出And k more …” 也就是说，不存在”And 0 more …”的输出。</p>\n<p>$\\qquad$人老了，希望眼睛还健在。</p>\n<hr>\n<h2><span id=\"codeee\">Codeee</span></h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;set&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;map&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> pair&lt;string, <span class=\"type\">int</span>&gt; tc;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    set&lt;string&gt; topics;</span><br><span class=\"line\">    map&lt;string, <span class=\"type\">int</span>&gt; topics_cnt;</span><br><span class=\"line\">    <span class=\"type\">int</span> n;</span><br><span class=\"line\">    cin &gt;&gt; n;</span><br><span class=\"line\">    <span class=\"built_in\">getchar</span>();</span><br><span class=\"line\">    string str, topic;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; ++i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">getline</span>(cin, str);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; str.<span class=\"built_in\">size</span>(); ++j)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (str[j] == <span class=\"string\">&#x27;#&#x27;</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                j += <span class=\"number\">1</span>;</span><br><span class=\"line\">                <span class=\"keyword\">while</span> (str[j] != <span class=\"string\">&#x27;#&#x27;</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (<span class=\"built_in\">isalnum</span>(str[j]))</span><br><span class=\"line\">                        topic += str[j];</span><br><span class=\"line\">                    <span class=\"keyword\">else</span> <span class=\"comment\">//测试点2：非英文字母和数字符号也具有分词作用</span></span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">while</span> (!<span class=\"built_in\">isalnum</span>(str[++j]) &amp;&amp; str[j] != <span class=\"string\">&#x27;#&#x27;</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (str[j] != <span class=\"string\">&#x27;#&#x27;</span> &amp;&amp; !topic.<span class=\"built_in\">empty</span>())</span><br><span class=\"line\">                            topic += <span class=\"string\">&#x27; &#x27;</span>;</span><br><span class=\"line\">                        j -= <span class=\"number\">1</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    ++j;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"built_in\">transform</span>(topic.<span class=\"built_in\">begin</span>(), topic.<span class=\"built_in\">end</span>(), topic.<span class=\"built_in\">begin</span>(), ::tolower);</span><br><span class=\"line\">                topics.<span class=\"built_in\">insert</span>(topic);</span><br><span class=\"line\">                topic = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> &amp;t: topics)</span><br><span class=\"line\">            topics_cnt[t] += <span class=\"number\">1</span>;</span><br><span class=\"line\">        topics.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\">vector&lt;tc&gt; <span class=\"title\">cup</span><span class=\"params\">(topics_cnt.begin(), topics_cnt.end())</span></span>;</span><br><span class=\"line\">    <span class=\"built_in\">sort</span>(cup.<span class=\"built_in\">begin</span>(), cup.<span class=\"built_in\">end</span>(), [](tc &amp;a, tc &amp;b) &#123; <span class=\"keyword\">return</span> a.second &gt; b.second; &#125;);</span><br><span class=\"line\">    <span class=\"type\">int</span> index = <span class=\"number\">0</span>;</span><br><span class=\"line\">    string hottest_topic = cup[<span class=\"number\">0</span>].first;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (++index &lt; cup.<span class=\"built_in\">size</span>() &amp;&amp; cup[index].second == cup[<span class=\"number\">0</span>].second)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (cup[index].first &lt; hottest_topic)</span><br><span class=\"line\">            hottest_topic = cup[index].first;</span><br><span class=\"line\">    hottest_topic[<span class=\"number\">0</span>] = <span class=\"built_in\">toupper</span>(hottest_topic[<span class=\"number\">0</span>]);</span><br><span class=\"line\">    cout &lt;&lt; hottest_topic &lt;&lt; endl &lt;&lt; cup[<span class=\"number\">0</span>].second &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (index &gt; <span class=\"number\">1</span>) <span class=\"comment\">//测试点3</span></span><br><span class=\"line\">        cout &lt;&lt; <span class=\"string\">&quot;And &quot;</span> &lt;&lt; index - <span class=\"number\">1</span> &lt;&lt; <span class=\"string\">&quot; more ...&quot;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2><span id=\"几点说明\">∑ 几点说明</span></h2><ol>\n<li><p>基本思路：一条微博中的话题用<code>set</code>存储可以避免重复计算，读完一条微博后将<code>set</code>中的话题计数至<code>map</code>中</p>\n</li>\n<li><p><code>sort</code>不能对<code>map</code>进行排序，因此先将原<code>map</code>放置于同类型<code>pair</code>的<code>vector</code>中，再进行排序，排序完找最小话题</p>\n</li>\n<li><p>依然用<code>transform</code>函数将所有英文字母转换为小写，最后将首字母转换为大写</p>\n</li>\n<li><p>这里用到的<code>isalnum</code>函数用来判断字符是否为字母或数字</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\"><center>函数</center></th>\n<th align=\"center\"><center> 作用</center></th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">islower(char c)</td>\n<td align=\"center\">是否为小写字母</td>\n</tr>\n<tr>\n<td align=\"center\">isupper(char c)</td>\n<td align=\"center\">是否为大写字母</td>\n</tr>\n<tr>\n<td align=\"center\">isdigit(char c)</td>\n<td align=\"center\">是否为数字</td>\n</tr>\n<tr>\n<td align=\"center\">isalpha(char c)</td>\n<td align=\"center\">是否为字母</td>\n</tr>\n<tr>\n<td align=\"center\">isalnum(char c)</td>\n<td align=\"center\">是否为字母或者数字</td>\n</tr>\n<tr>\n<td align=\"center\">toupper(char c)</td>\n<td align=\"center\">字母小写转大写</td>\n</tr>\n<tr>\n<td align=\"center\">tolower(char c)</td>\n<td align=\"center\">字母大写转小写</td>\n</tr>\n</tbody></table>\n</li>\n</ol>\n","text":"➳ENTRY$\\qquad$新浪微博可以在发言中嵌入“话题”，即将发言中的话题文字写在一对“#”之间，就可以生成话题链接，点击链接可以看到有多少人在跟自己讨论相同或者相似的话题。新浪微博还会随时更新热门话题列表，并将最热门的话题放在醒目的位置推荐大家关注。 $\\qquad$本题目...","link":"","photos":[],"count_time":{"symbolsCount":"3.8k","symbolsTime":"3 mins."},"categories":[{"name":"PTA-数据结构与算法题目集","slug":"PTA-数据结构与算法题目集","count":7,"path":"api/categories/PTA-数据结构与算法题目集.json"}],"tags":[{"name":"C＋＋","slug":"C＋＋","count":160,"path":"api/tags/C＋＋.json"},{"name":"map","slug":"map","count":25,"path":"api/tags/map.json"},{"name":"set","slug":"set","count":16,"path":"api/tags/set.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">输入格式:</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">输出格式:</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">输入样例:</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">输出样例:</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">Ω</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">Codeee</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">∑ 几点说明</span></a></li></ol>","author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}},"mapped":true,"prev_post":{"title":"7-47 打印选课学生名单","uid":"0c577028a09af77ed6d5c0870f900894","slug":"7-47-打印选课学生名单","date":"2022-02-06T14:08:04.000Z","updated":"2022-09-11T08:51:16.855Z","comments":true,"path":"api/articles/7-47-打印选课学生名单.json","keywords":null,"cover":[],"text":"➳ENTRY$\\qquad$假设全校有最多40000名学生和最多2500门课程。现给出每个学生的选课清单，要求输出每门课的选课学生名单。 输入格式:$\\qquad$输入的第一行是两个正整数：N（≤40000），为全校学生总数；K（≤2500），为总课程数。此后N行，每行包括一个学...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"PTA-数据结构与算法题目集","slug":"PTA-数据结构与算法题目集","count":7,"path":"api/categories/PTA-数据结构与算法题目集.json"}],"tags":[{"name":"C＋＋","slug":"C＋＋","count":160,"path":"api/tags/C＋＋.json"},{"name":"vector","slug":"vector","count":17,"path":"api/tags/vector.json"}],"author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}}},"next_post":{"title":"7-45 航空公司VIP客户查询","uid":"bd9129163f952044453adc76640f4d91","slug":"7-45-航空公司VIP客户查询","date":"2022-02-02T12:48:48.000Z","updated":"2022-02-10T13:12:16.778Z","comments":true,"path":"api/articles/7-45-航空公司VIP客户查询.json","keywords":null,"cover":[],"text":"➳ENTRY$\\qquad$不少航空公司都会提供优惠的会员服务，当某顾客飞行里程累积达到一定数量后，可以使用里程积分直接兑换奖励机票或奖励升舱等服务。现给定某航空公司全体会员的飞行记录，要求实现根据身份证号码快速查询会员里程积分的功能。 输入格式:$\\qquad$输入首先给出两个...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"PTA-数据结构与算法题目集","slug":"PTA-数据结构与算法题目集","count":7,"path":"api/categories/PTA-数据结构与算法题目集.json"}],"tags":[{"name":"C＋＋","slug":"C＋＋","count":160,"path":"api/tags/C＋＋.json"},{"name":"map","slug":"map","count":25,"path":"api/tags/map.json"}],"author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}}}}