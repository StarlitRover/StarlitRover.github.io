{"title":"「Section 8」控制器","uid":"9c235338e8419467c57a9cf3dae4161a","slug":"控制器","date":"2022-04-02T11:10:12.000Z","updated":"2022-04-02T13:25:16.028Z","comments":true,"path":"api/articles/控制器.json","keywords":null,"cover":[],"content":"<ol>\n<li><p>控制器是整个计算机的指挥中心，协调计算机的各部件进行工作。其实质工作就是解释程序，每次从存储器中读取一条指令，经过分析译码产生一串操作命令，再发给各功能部件，控制各部件的动作，以实现指令和程序的功能。（取指令→分析指令→执行指令→取指令）</p>\n<img src=\"/images/计算机组成原理/7/1.png\" style=\"zoom:60%;\">\n\n<span id=\"more\"></span>\n</li>\n<li><p><strong>总线</strong>（bus）</p>\n<ul>\n<li><strong>构成</strong><ul>\n<li>AB（单向）：地址总线，CPU→AB→存储器或IO设备</li>\n<li>DB（双向）：数据总线，各部件之间</li>\n<li>CB（单&#x2F;双线）：控制总线，包含多种不同的控制信号线和状态信号线</li>\n</ul>\n</li>\n<li><strong>层次</strong><ul>\n<li>系统总线（AB，DB，CB）：CPU访问存储器，I&#x2F;O控制器</li>\n<li>局部总线 &#x2F; I&#x2F;O总线</li>\n</ul>\n</li>\n</ul>\n<img src=\"/images/计算机组成原理/7/2.png\" style=\"zoom:70%;\">\n</li>\n<li><p><strong>存储器结构</strong></p>\n<ul>\n<li><strong>普林斯顿结构</strong><ul>\n<li>程序和数据共同存放在<mark>一个存储器</mark></li>\n<li><mark>一套</mark>地址总线与数据总线</li>\n<li>典型CPU：Intel微处理器，ARM7，MIPS处理器</li>\n</ul>\n</li>\n<li><strong>哈佛结构</strong><ul>\n<li>程序和数据分开存放在<mark>两个存储器</mark>中</li>\n<li><mark>二套</mark>地址总线与数据总线</li>\n<li>指令和数据宽度可以不同</li>\n<li>典型CPU：PIC系列，MC68系列，Z8系列，AVR系列，ARM9、10、11，51单片机（改进型哈佛结构，指令和数据存储器分时复用同一条总线）</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><strong>中央处理器CPU</strong></p>\n<ul>\n<li><p><strong>组成</strong>：运算器和处理器</p>\n</li>\n<li><p><strong>基本功能</strong></p>\n<ul>\n<li><strong>指令控制</strong>：确保计算机指令按程序的顺序执行</li>\n<li><strong>操作控制</strong>：控制微操作的产生、组合、传送和管理</li>\n<li><strong>时间控制</strong>：严格按照时间序列执行微操作和指令</li>\n<li><strong>数据加工</strong>：算术运算和逻辑运算</li>\n</ul>\n</li>\n<li><p>本质上就是一个复杂的有限自动机</p>\n<img src=\"/images/计算机组成原理/7/3.jpg\" style=\"zoom:30%;\">\n\n<ul>\n<li>$S_0～S_3$四个状态是所有指令都需要预先执行的公操作</li>\n<li>$S_3$结束后会根据指令的译码情况进行状态转换</li>\n</ul>\n</li>\n<li><p><strong>指令执行的三个阶段</strong></p>\n<ul>\n<li><strong>取指令阶段</strong>：从存储器中取出一条指令送到CPU</li>\n<li><strong>指令译码阶段</strong>：对当前指令进行译码，分析是哪条指令操作数的寻址方式等<ul>\n<li>译码时可能不会对应任何一个状态，也可能包含好几个状态</li>\n</ul>\n</li>\n<li><strong>执行阶段</strong>：执行该指令，控制相应部件完成指令的操作</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><strong>控制器组成</strong></p>\n<ul>\n<li><strong>专用寄存器</strong><ul>\n<li><strong>程序计数器（PC）</strong>：存放指令地址</li>\n<li><strong>指令寄存器（IR）</strong>：存放指令编码</li>\n<li><strong>地址寄存器（AR）</strong>：用于存放CPU访问存储器或者I&#x2F;O设备的地址码</li>\n<li><strong>数据寄存器（DR）</strong>：用于存放CPU访问存储器或者I&#x2F;O设备的数据</li>\n</ul>\n</li>\n<li><strong>AR和DR</strong>：总线接口单元BIU (Bus Interface Unit)的重要组成部分，CPU与存储器或者&#x2F;0系统的一个总线接口</li>\n<li><strong>指令译码器ID</strong>：对指令操作码进行译码，以识别该指令所要求的操作</li>\n<li><strong>时序系统</strong>：负责提供时钟基准和各级时序信号，规定每个操作的时间</li>\n<li><strong>操作控制信号形成部件</strong>：产生指令所需的各种操作控制信号，以便正确地建立数据通路，完成取指令、分析指令和执行指令的控制</li>\n</ul>\n</li>\n<li><p><strong>时序系统及其控制</strong></p>\n<ul>\n<li><p><strong>三大周期</strong></p>\n<ul>\n<li><strong>指令周期</strong>：指计算机从内存取出一条指令并完成该指令的执行所需要的时间</li>\n<li><strong>时钟周期</strong>：节拍（T），指CPU执行一个微操作的最小时间单位，一般是CPU主频脉冲的周期</li>\n<li><strong>机器周期</strong>（CPU周期）：用于完成1次内存的读写操作，或者1次ALU运算，或是1次总线传输<ul>\n<li>一般规定为CPU与内存交换1次信息（读或写内存）所需要的时间</li>\n<li>一个机器周期可能包含多个时钟周期</li>\n</ul>\n</li>\n</ul>\n<img src=\"/images/计算机组成原理/7/4.png\" style=\"zoom:50%;\">\n</li>\n<li><p><strong>时序控制方式</strong>：同步不同的控制信号序列，并将序列号衔接起来，从而保证各部件有节奏依次执行规定的各种操作</p>\n<ul>\n<li><strong>同步控制方式</strong><ul>\n<li>所有指令都具有相同的机器周期数、相同的节拍，相同的执行时间</li>\n<li>以微操作序列最长的指令为标准，确定机器周期数和节拍数</li>\n<li>时序系统产生统一的、顺序固定的、周而复始的机器周期和节拍信号</li>\n<li><strong>优点</strong>：电路简单；<strong>缺点</strong>：运行效率低，速度慢</li>\n</ul>\n</li>\n<li><strong>异步控制方式</strong><ul>\n<li>没有严格的时序信号对微操作进行同步</li>\n<li>每条指令需要多少节拍，就产生多少节拍；当指令执行完毕，发出应答信号；时序部件收到应答信号后，才开始下条指令的执行</li>\n<li>执行不同指令所需的时间完全由实际需要确定，不尽相同</li>\n<li><strong>优点</strong>：指令的运行效率高；<strong>缺点</strong>：控制器电路复杂</li>\n<li>异步控制方式比较好地协调了主从设备速度不一致问题，在计算机中得到广泛的应用</li>\n</ul>\n</li>\n<li><strong>联合控制方式</strong>：把同步控制方式和异步控制方式结合使用<ul>\n<li>现代计算机系统大多采用联合控制方式，一般设计思想是：在功能部件内部采用同步控制方式，而在功能部件之间采用异步控制方式。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n","text":" 控制器是整个计算机的指挥中心，协调计算机的各部件进行工作。其实质工作就是解释程序，每次从存储器中读取一条指令，经过分析译码产生一串操作命令，再发给各功能部件，控制各部件的动作，以实现指令和程序的功能。（取指令→分析指令→执行指令→取指令） 总线（bus） 构成 AB（单向）：地...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"计算机组成原理","slug":"计算机组成原理","count":8,"path":"api/categories/计算机组成原理.json"}],"tags":[{"name":"notes","slug":"notes","count":13,"path":"api/tags/notes.json"}],"toc":"","author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}},"mapped":true,"prev_post":{"title":"「1016」Phone Bills","uid":"4cf831a9ea6bfd5b5d2bee7ee829301b","slug":"1016-Phone-Bills","date":"2022-04-04T03:35:13.000Z","updated":"2022-04-04T04:58:35.193Z","comments":true,"path":"api/articles/1016-Phone-Bills.json","keywords":null,"cover":[],"text":"➳ENTRY $\\qquad$A long-distance telephone company charges its customers by the following rules: $\\qquad$Making a long-distance call costs a c...","link":"","photos":[],"count_time":{"symbolsCount":"7.3k","symbolsTime":"7 mins."},"categories":[{"name":"PAT（Advanced Level）Practice","slug":"PAT（Advanced-Level）Practice","count":153,"path":"api/categories/PAT（Advanced-Level）Practice.json"}],"tags":[{"name":"C＋＋","slug":"C＋＋","count":160,"path":"api/tags/C＋＋.json"},{"name":"set","slug":"set","count":16,"path":"api/tags/set.json"}],"author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}}},"next_post":{"title":"Bézier Curve：交互增强","uid":"d3ed745153d9df10022e8be01ae8a15a","slug":"Bezier-Curve：交互增强","date":"2022-04-01T12:20:10.000Z","updated":"2022-05-19T00:16:30.206Z","comments":true,"path":"api/articles/Bezier-Curve：交互增强.json","keywords":null,"cover":[],"text":"☘︎ Preface$\\qquad$在很久很久的以前，我有介绍过Bézier Curve的理论推导以及基本实现过程（Bézier Curve：小试牛刀）。但不难看出，这个版本的Bézier Curve绘制程序的交互性极差。$t_0$一旦确定就不能更改，控制点还要一个一个地输入坐标，...","link":"","photos":[],"count_time":{"symbolsCount":"9.5k","symbolsTime":"9 mins."},"categories":[{"name":"计算机图形学","slug":"计算机图形学","count":3,"path":"api/categories/计算机图形学.json"}],"tags":[{"name":"走码观花","slug":"走码观花","count":15,"path":"api/tags/走码观花.json"},{"name":"OpenGL","slug":"OpenGL","count":4,"path":"api/tags/OpenGL.json"}],"author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}}}}