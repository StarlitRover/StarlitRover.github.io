{"title":"「Section 1」数据库系统概论","uid":"cf7c04c438de034cff5412cfe4f52f34","slug":"数据库系统概论","date":"2022-03-06T05:11:11.000Z","updated":"2022-03-06T05:19:16.128Z","comments":true,"path":"api/articles/数据库系统概论.json","keywords":null,"cover":[],"content":"<ol>\n<li><p><strong>数据库</strong>（DataBase）：存储在计算机系统内的有结构的数据结构。不仅包含数据，同时还有数据的含义、数据结构、约束的完整性定义</p>\n</li>\n<li><p><strong>文件系统的缺点</strong></p>\n<ul>\n<li><p>数据冗余较大：数据文件无法共享</p>\n</li>\n<li><p>数据和程序缺乏独立性：改变数据的逻辑结构就必须修改程序</p>\n<span id=\"more\"></span></li>\n</ul>\n</li>\n<li><p><strong>数据库管理系统</strong>（Database Management System）：DBMS是位于用户与操作系统之间的一层软件，它是一个大型的复杂的系统软件。领先的著名数据库管理系统DBMS有PostgreSQL、 IBM DB2、Oracle、 Microsoft SQL Server等。其最基本的功能就是允许用户逻辑地使用数据而无需关注这些数据在计算机中是如何存放、如何处理的。</p>\n<ul>\n<li><strong>数据定义</strong>：方便用户定义数据的逻辑结构</li>\n<li><strong>数据操控</strong>：方便用户对数据进行插入、删除、查询、修改等操作</li>\n<li><strong>完整性约束检查</strong>：数据必须符合一些规定，如学号必须唯一、所属地区必须存在等</li>\n<li><strong>访问机制</strong>：只有合法用户可以访问、操作数据</li>\n<li><strong>并发控制</strong>：允许多个用户、应用并发访问数据库而不破坏数据的一致性</li>\n<li><strong>数据库恢复</strong></li>\n</ul>\n</li>\n<li><p><strong>数据库系统</strong>（Database System）：包括数据库、DBMS、应用系统、计算机硬件、数据库管理员（DBA）</p>\n<ul>\n<li><strong>整体数据的结构化</strong>：数据库中的数据不属于任何应用而是公共的，结构是全面的。</li>\n<li><strong>数据的共享度高</strong>：合法用户可以同时使用数据。</li>\n<li><strong>数据的独立性高</strong>：数据和程序之间相互独立。</li>\n<li><strong>高度的数据控制能力</strong><ul>\n<li>数据安全性高：在DBMS管理下，只有合法用户可以访问数据库。</li>\n<li>数据完整性好：DBMS自动检查数据的一致性、相容性。</li>\n<li>并发控制能力强：可以使多个用户同时对数据库中的数据进行操作而不破坏数据的完整性。</li>\n<li>数据恢复能力强：具备恢复数据库的功能。</li>\n</ul>\n</li>\n</ul>\n<img src=\"/images/数据库原理/1.jpg\" style=\"zoom:45%;\">\n</li>\n<li><p><strong>数据库的人员构成</strong></p>\n<ul>\n<li><strong>数据库管理员</strong>（DBA）<ul>\n<li>在用户与数据库开发人员之间进行沟通协调</li>\n<li>参与数据库设计工作，熟悉数据库的整体布局</li>\n<li>决定数据库的完整性约束条件和不同用户的存取权限</li>\n<li>进行数据库的维护工作，保证数据库的正常运行</li>\n</ul>\n</li>\n<li><strong>数据库设计者</strong>：一般由DBA担任。需要分析用户需求，选取适当的存储结构。</li>\n<li><strong>应用程序开发人员</strong>：开发程序来实现对数据库应用程序的各功能模块</li>\n<li><strong>终端用户</strong>：利用应用程序访问、操作数据库，是数据库的主要面向对象</li>\n</ul>\n</li>\n<li><p><strong>三级模式结构</strong>：不同层次级别的用户看到的数据视图是不同的</p>\n<ul>\n<li><strong>（逻辑）模式</strong>：唯一。数据在逻辑上的视图，是数据库中全体数据的逻辑结构和特征的描述，是所有用户的公共数据视图。</li>\n<li><strong>外模式</strong>：不唯一。呈现给终端用户的视图，外模式根据终端用户的需求呈现特定部分的数据库。一个外模式可以被多个应用程序应用，一个应用程序只能应用一个外模式。外模式是模式的子集。</li>\n<li><strong>内模式</strong>：唯一。定义了数据库存取的物理结构，与软件和硬件环境有关。</li>\n</ul>\n</li>\n<li><p><strong>二级映像</strong>：当其中一模式改变时只需修改相应的映像即可使另一模式不发生变化</p>\n<ul>\n<li><strong>外模式&#x2F;模式映像</strong>：逻辑独立性，模式发生改变时无需改变外模式与应用程序。</li>\n<li><strong>模式&#x2F;内模式映像</strong>：物理独立性，内模式改变时无需改变模式。</li>\n</ul>\n</li>\n<li><p><strong>应用程序读取数据的过程</strong></p>\n<ul>\n<li>终端用户通过应用程序指定外模式名发出命令</li>\n<li>DBMS调取相应的外模式，同时检查用户的权限，只有通过检查可以继续</li>\n<li>DBMS根据外模式 &#x2F;模式映像得到相应数据在模式上的信息</li>\n<li>DBMS根据模式 &#x2F;内模式映像得到相应数据在内模式上的信息</li>\n<li>DBMS向操作系统发出读取该数据的请求</li>\n<li>操作系统将该数据从外存中调入系统缓存区中</li>\n<li>DBMS将数据按照外模式的形式送至用户工作区</li>\n<li>记载系统工作日志</li>\n</ul>\n</li>\n</ol>\n","text":" 数据库（DataBase）：存储在计算机系统内的有结构的数据结构。不仅包含数据，同时还有数据的含义、数据结构、约束的完整性定义 文件系统的缺点 数据冗余较大：数据文件无法共享 数据和程序缺乏独立性：改变数据的逻辑结构就必须修改程序 数据库管理系统（Database Manage...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"数据库原理","slug":"数据库原理","count":3,"path":"api/categories/数据库原理.json"}],"tags":[{"name":"notes","slug":"notes","count":13,"path":"api/tags/notes.json"}],"toc":"","author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}},"mapped":true,"prev_post":{"title":"「Section 2」建立数据模型","uid":"6e65b890459bfc2665ec0e0a14ed8ee7","slug":"建立数据模型","date":"2022-03-06T06:27:50.000Z","updated":"2022-06-12T04:04:53.662Z","comments":true,"path":"api/articles/建立数据模型.json","keywords":null,"cover":[],"text":" 概念模型的基本概念 实体：客观事物的映射，可以是实际存在的对象，也可以是某种概念 属性：实体的特征，描述实体，使实体更为具体 域：一个属性的取值范围 实体集：所有具有相同属性的实体所构成的集合 实体型：实体名称以及所有属性名构成的集合 码：实体集中可以根据一个属性或多个属性唯一...","link":"","photos":[],"count_time":{"symbolsCount":675,"symbolsTime":"1 mins."},"categories":[{"name":"数据库原理","slug":"数据库原理","count":3,"path":"api/categories/数据库原理.json"}],"tags":[{"name":"notes","slug":"notes","count":13,"path":"api/tags/notes.json"}],"author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}}},"next_post":{"title":"「Section 3」补码加减运算方法","uid":"916fffb6f0cf37494d0f7af19c9c80e4","slug":"补码加减运算方法","date":"2022-03-04T09:46:00.000Z","updated":"2022-03-14T12:23:06.655Z","comments":true,"path":"api/articles/补码加减运算方法.json","keywords":null,"cover":null,"text":"$\\qquad$目前计算机中的数据普遍是用补码存储的，因为补码具有简单的加减法规则，运算简单，易于实现，而且符号位可以和数值位一起参与运算。 $\\qquad\\quad$α. 补码规则运算 $\\qquad\\quad$β. 溢出检测 $\\qquad\\quad$γ. 机器数的移位运算 ...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"计算机组成原理","slug":"计算机组成原理","count":8,"path":"api/categories/计算机组成原理.json"}],"tags":[{"name":"notes","slug":"notes","count":13,"path":"api/tags/notes.json"}],"author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}}}}