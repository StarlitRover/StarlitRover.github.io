{"title":"「Section 2」浮点数表示","uid":"2aa32c1dad7cbbce692f6b1b0a062627","slug":"浮点数表示","date":"2022-03-01T08:43:17.000Z","updated":"2022-03-03T08:04:11.531Z","comments":true,"path":"api/articles/浮点数表示.json","keywords":null,"cover":[],"content":"<ol>\n<li><p><strong>浮点数</strong>：顾名思义，小数点的位置可以浮动，采用了<mark>科学记数法</mark>的思想</p>\n<ul>\n<li><p>任意一个二进制数都可以用<mark>阶码$E$、尾数$M$</mark>唯一地表示为<br>$$<br>N&#x3D;2^E\\times M&#x3D;2^{\\pm e}\\times\\pm 0.m<br>$$<br>⚠️<strong>正常情况下的尾数$M$包括符号位</strong></p>\n</li>\n<li><p>阶码$E$决定了数据的表示范围，尾数$M$决定了数据的表示精度</p>\n</li>\n<li><p>阶码与尾数可以采用不同的机器码进行表示</p>\n<span id=\"more\"></span>\n</li>\n<li><p>当浮点数的绝对值超过最大正数时发生上溢，小于最小正数时发生下溢</p>\n<img src=\"/images/计算机组成原理/2/1.png\" style=\"zoom:50%;\">\n\n<p>⚠️<strong>正溢出&#x2F;负溢出</strong>指<mark>两正数&#x2F;两负数</mark>相加时超出<mark>最大值&#x2F;最小值</mark>，均属于上溢出的特例。</p>\n</li>\n<li><p><strong>机器数0</strong>：有两种情况</p>\n<ul>\n<li>若浮点数的尾数为零，无论阶码为何值；</li>\n<li>当阶码的值遇到比它能表示的最小值还要小时（阶码负溢出），无论其尾数为何值</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><strong>浮点数的规格化</strong>：上文中的浮点数表示方法随着阶码$E$的变化会有多种表示方法，然而计算机中需要唯一性，因此我们需要对浮点数的尾数进行<strong>规格化处理</strong>。</p>\n<ul>\n<li><p><strong>规格化处理</strong>：使尾数$M$的<strong>最高有效位</strong>（⚠️尾数的第一位是符号位，因此最高有效位为符号位后一位）为1，即$1\\geq|M|&gt;0.1\\mathrm{B}&#x3D;0.5\\mathrm{D}$。</p>\n</li>\n<li><p>那么对于非规格化尾数的处理也非常的明显，只需改变阶码值来使得尾数左移或右移</p>\n</li>\n<li><p>另一种规格化数方法，是将符号位单独取出提至最前，然后隐藏最高有效位的1隐藏，那么就有$1\\leq|M|&lt;2$：<br>$$<br>N&#x3D;2^E\\times M&#x3D;2^{\\pm e}\\times\\pm 1.m<br>$$<br>这便是IEEE754标准所采用的规格数，两种规格化数的方法没有本质区别，<strong>没有特殊说明的规格化数都是按照第一种的标准</strong>。</p>\n</li>\n</ul>\n</li>\n<li><p><strong>IEEE754浮点数标准</strong>：到此为止，其实还是没给出浮点数唯一的标准，比如说尾数与阶码的机器码形式就还没确定。因此在20世纪70年底，美国电气及电子工程师协会（IEEE）于1985年提出了浮点数标准IEEE754，该标准至今仍被主流计算机所采用。</p>\n<ul>\n<li><p>该标准主要包括<mark>32位单精度浮点数<code>float</code></mark>与<mark>64位双精度浮点数<code>double</code></mark></p>\n</li>\n<li><p>规定所有二进制浮点数均由<mark>符号位$S$、阶码$E$与尾数$M$</mark>三部分组成，不同精度的浮点数各部分位宽不同，下图为16位浮点数各部分位宽分布</p>\n<img src=\"/images/计算机组成原理/2/2.png\" style=\"zoom:100%;\">\n</li>\n<li><p><strong>阶码</strong>$E$用<mark>移码</mark>表示，⚠️其偏移量不是正常情况下的$2^n$而是$2^n-1$，之所以用移码表示阶码，其一是不需要符号位（移码可以认为将整体范围进行了一个平移）；其二可以直接使用阶码比较大小；其三更方便移位进行加减运算。而对于偏移量采用$2^n-1$而非$2^n$则众说纷纭，我提供一部分较为合理的解释：</p>\n<ul>\n<li>偏移量变小，表示的实际范围往右平移，即最大值更大，正数表示范围直接翻一倍，整体范围变大（负数范围变小只会使精度变低）</li>\n<li>使每一个规格化数的倒数能用另一个浮点数表示：阶码范围$[1-2^n,2^n-2]\\rightarrow [2-2^n,2^n-1]$（00…0与11…1的阶码被保留用作特殊情况，因此范围较往常更小）。偏移量取$2^n$时，阶码为$1-2^n$的数取完倒数后阶码变为$2^n-1&gt;2^n-2$发生上溢，损失值较大；偏移量取$2^n-1$ 时，阶码为$2^n-1$的数取完倒数后阶码变为$1-2^n&lt;2-2^n$发生下溢，但损失值极小。</li>\n</ul>\n</li>\n<li><p><strong>尾数</strong>$M$为定点小数，将小数点左侧的1隐藏，完整的尾数形式应该为$1.M$，实际只保存$M$，节省下来的存储空间用于提高精度。可以认为尾数是以原码表示。</p>\n<p>⚠️尾数本身是包括符号位的，但IEEE754标准中将其分开并置于开头是特殊操作，如无特别说明符号位与尾数是连在一起的一个整体。</p>\n</li>\n<li><p><strong>特殊情况</strong>：$E&#x3D;00\\cdots0||E&#x3D;11\\cdots1$</p>\n<img src=\"/images/计算机组成原理/2/3.png\" style=\"zoom:30%;\">\n</li>\n<li><p>当阶码$E$与尾数$M$均为0时表示机器数0。另外由于尾数采用原码表示，因此存在<mark>+0与-0</mark>。</p>\n</li>\n<li><p>当$E\\in[1,2^n-2]$时，浮点数为规格化数，其值为<br>$$<br>N&#x3D;(-1)^s\\times 2^{E-(2^n-1)}\\times 1.M<br>$$</p>\n</li>\n<li><p>我们清楚规格化数$[1,2^n-2]\\times 2^{[2-2^n,2^n-1]}$无法表示绝对值在$[0,2^{2-2^n})$内的数，那么为了进一步提高浮点数的表示精度，于是引入非规格化数。当$E&#x3D;0,M\\neq0$时，浮点数便为非规格化数，其值为<br>$$<br>N&#x3D;(-1)^s\\times2^{2-2^n}\\times0.M<br>$$</p>\n</li>\n</ul>\n</li>\n</ol>\n","text":" 浮点数：顾名思义，小数点的位置可以浮动，采用了科学记数法的思想 任意一个二进制数都可以用阶码$E$、尾数$M$唯一地表示为$$N&#x3D;2^E\\times M&#x3D;2^{\\pm e}\\times\\pm 0.m$$⚠️正常情况下的尾数$M$包括符号位 阶码$E$决定了数据...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"计算机组成原理","slug":"计算机组成原理","count":8,"path":"api/categories/计算机组成原理.json"}],"tags":[{"name":"notes","slug":"notes","count":13,"path":"api/tags/notes.json"}],"toc":"","author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}},"mapped":true,"prev_post":{"title":"「1012」The Best Rank","uid":"e26b5ce0cae66dfe27a555c57255d754","slug":"1012-The-Best-Rank","date":"2022-03-03T07:03:15.000Z","updated":"2022-12-02T07:28:37.856Z","comments":true,"path":"api/articles/1012-The-Best-Rank.json","keywords":null,"cover":null,"text":"➳ENTRY $\\qquad$To evaluate the performance of our first year CS majored students, we consider their grades of three courses only: C - C Prog...","link":"","photos":[],"count_time":{"symbolsCount":"4.7k","symbolsTime":"4 mins."},"categories":[{"name":"PAT（Advanced Level）Practice","slug":"PAT（Advanced-Level）Practice","count":153,"path":"api/categories/PAT（Advanced-Level）Practice.json"}],"tags":[{"name":"C＋＋","slug":"C＋＋","count":160,"path":"api/tags/C＋＋.json"},{"name":"map","slug":"map","count":25,"path":"api/tags/map.json"},{"name":"sort","slug":"sort","count":24,"path":"api/tags/sort.json"}],"author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}}},"next_post":{"title":"「1010」Radix","uid":"ace59b7e8a5639360739593f39df1262","slug":"1010-Radix","date":"2022-02-28T15:04:14.000Z","updated":"2022-11-25T16:35:01.423Z","comments":true,"path":"api/articles/1010-Radix.json","keywords":null,"cover":null,"text":"➳ENTRY $\\qquad$Given a pair of positive integers, for example, 6 and 110, can this equation 6 &#x3D; 110 be true? The answer is yes, if 6 is...","link":"","photos":[],"count_time":{"symbolsCount":"5.5k","symbolsTime":"5 mins."},"categories":[{"name":"PAT（Advanced Level）Practice","slug":"PAT（Advanced-Level）Practice","count":153,"path":"api/categories/PAT（Advanced-Level）Practice.json"}],"tags":[{"name":"C＋＋","slug":"C＋＋","count":160,"path":"api/tags/C＋＋.json"},{"name":"binary search","slug":"binary-search","count":7,"path":"api/tags/binary-search.json"}],"author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}}}}