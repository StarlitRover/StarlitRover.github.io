{"title":"「Section 2」建立数据模型","uid":"6e65b890459bfc2665ec0e0a14ed8ee7","slug":"建立数据模型","date":"2022-03-06T06:27:50.000Z","updated":"2022-06-12T04:04:53.662Z","comments":true,"path":"api/articles/建立数据模型.json","keywords":null,"cover":[],"content":"<ol>\n<li><p>概念模型的基本概念</p>\n<ul>\n<li><p><strong>实体</strong>：客观事物的映射，可以是实际存在的对象，也可以是某种概念</p>\n</li>\n<li><p><strong>属性</strong>：实体的特征，描述实体，使实体更为具体</p>\n</li>\n<li><p><strong>域</strong>：一个属性的取值范围</p>\n</li>\n<li><p><strong>实体集</strong>：所有具有相同属性的实体所构成的集合</p>\n<span id=\"more\"></span>\n</li>\n<li><p><strong>实体型</strong>：实体名称以及所有属性名构成的集合</p>\n</li>\n<li><p><strong>码</strong>：实体集中可以根据一个属性或多个属性唯一确定每一个实体，那么称该属性或属性组为码</p>\n</li>\n</ul>\n</li>\n<li><p>主要的<strong>数据模型</strong></p>\n<ul>\n<li>层次模型</li>\n<li>网状模型</li>\n<li>关系模型</li>\n<li>面向对象模型</li>\n</ul>\n</li>\n<li><p><strong>数据模型的三大基本组成部分</strong></p>\n<ul>\n<li><strong>数据结构</strong>：实体间联系在信息世界的表示方法。描述了系统的静态特性。</li>\n<li><strong>数据操作</strong>：对数据可以执行的操作（主要有<mark>数据维护、数据检索</mark>两大类）及操作规则。描述了系统的动态特性。</li>\n<li><strong>完整性约束</strong>：只执行符合完整性约束条件的操作，从而保证数据的正确、有效、相容。</li>\n</ul>\n</li>\n<li><p><strong>E-R图的基本表示方法</strong></p>\n<ul>\n<li>矩形表示实体集，椭圆表示实体集的属性，两者之间用无向边相连</li>\n<li>实体的码（e.g.学号，身份证号）用下划线标出</li>\n<li>菱形表示实体集之间的关系，菱形中写上关系名，与实体集的连线上则写上两个实体集之间的数量对应关系（联系的阶）<ul>\n<li>一对一：1:1</li>\n<li>一对多：1:n</li>\n<li>多对多：m:n</li>\n</ul>\n</li>\n</ul>\n<img src=\"/images/数据库原理/2.png\" style=\"zoom:45%;\">\n</li>\n<li><p><strong>多元联系</strong>：两个以上实体集之间的联系</p>\n<p><img src=\"/images/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8E%9F%E7%90%86/3.png\"></p>\n</li>\n<li><p><strong>联系的属性</strong>：有时一个属性从逻辑上不能单独分配给一个实体时，可以将属性分配给联系</p>\n<img src=\"/images/数据库原理/4.png\" style=\"zoom:80%;\">\n\n<p>上图中一名学生有多门选课的成绩，而一门课程则有多个学生的成绩，因此两者都不能直接拥有成绩属性，而是将成绩属性分配给选课关系更为合适，一个选课一个成绩。</p>\n</li>\n<li><p><strong>强实体集</strong>：有码的实体集；<strong>弱实体集</strong>：无码的实体集，依赖于其余一个或多个实体集的码。</p>\n</li>\n</ol>\n","text":" 概念模型的基本概念 实体：客观事物的映射，可以是实际存在的对象，也可以是某种概念 属性：实体的特征，描述实体，使实体更为具体 域：一个属性的取值范围 实体集：所有具有相同属性的实体所构成的集合 实体型：实体名称以及所有属性名构成的集合 码：实体集中可以根据一个属性或多个属性唯一...","link":"","photos":[],"count_time":{"symbolsCount":675,"symbolsTime":"1 mins."},"categories":[{"name":"数据库原理","slug":"数据库原理","count":3,"path":"api/categories/数据库原理.json"}],"tags":[{"name":"notes","slug":"notes","count":13,"path":"api/tags/notes.json"}],"toc":"","author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}},"mapped":true,"prev_post":{"title":"「Section 0」小记OpenGL","uid":"df24c0ec65d9b0432ce3e888de12a2d4","slug":"小记OpenGL","date":"2022-03-08T08:01:35.000Z","updated":"2022-03-08T08:27:20.609Z","comments":true,"path":"api/articles/小记OpenGL.json","keywords":null,"cover":[],"text":" glfwMakeContextCurrent(GLFWwindow *window)：将窗口window设为当前上下文 OpenGL可以认为是一个巨大的状态机。所谓状态机，是一个包含了许多当前属性（背景颜色、渲染模式）的集合（状态），里面的属性值直到下次修改前都不会改变。那么当...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"计算机图形学","slug":"计算机图形学","count":3,"path":"api/categories/计算机图形学.json"}],"tags":[{"name":"OpenGL","slug":"OpenGL","count":4,"path":"api/tags/OpenGL.json"}],"author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}}},"next_post":{"title":"「Section 1」数据库系统概论","uid":"cf7c04c438de034cff5412cfe4f52f34","slug":"数据库系统概论","date":"2022-03-06T05:11:11.000Z","updated":"2022-03-06T05:19:16.128Z","comments":true,"path":"api/articles/数据库系统概论.json","keywords":null,"cover":[],"text":" 数据库（DataBase）：存储在计算机系统内的有结构的数据结构。不仅包含数据，同时还有数据的含义、数据结构、约束的完整性定义 文件系统的缺点 数据冗余较大：数据文件无法共享 数据和程序缺乏独立性：改变数据的逻辑结构就必须修改程序 数据库管理系统（Database Manage...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"数据库原理","slug":"数据库原理","count":3,"path":"api/categories/数据库原理.json"}],"tags":[{"name":"notes","slug":"notes","count":13,"path":"api/tags/notes.json"}],"author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}}}}