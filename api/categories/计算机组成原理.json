{"name":"计算机组成原理","slug":"计算机组成原理","count":8,"postlist":[{"title":"「Section 4」定点数的乘除法实现","uid":"22f37ab474c466341b4a621e124d19bc","slug":"定点数的乘除法实现","date":"2022-03-09T01:13:56.000Z","updated":"2022-06-19T02:52:05.419Z","comments":true,"path":"api/articles/定点数的乘除法实现.json","keywords":null,"cover":[],"text":"☙ 定点乘法运算Σ 原码一位乘法$\\qquad[X]_ {原}&#x3D;X_ sX_ 1X_ 2…X_ n\\ ,\\ [Y]_ {原}&#x3D;Y_ sY_ 1Y_ 2…Y_ n\\ ,\\ P&#x3D;X\\cdot Y$，其中$X_ s,Y_ s,P_s$为符号位。 符号位单独...","link":"","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[{"name":"计算机组成原理","slug":"计算机组成原理","count":8,"path":"api/categories/计算机组成原理.json"}],"tags":[{"name":"notes","slug":"notes","count":13,"path":"api/tags/notes.json"}],"author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}}},{"title":"「Section 5」定点运算器（&浮点加减）","uid":"d89b7bb9a5cb29131093afe1032ded19","slug":"定点运算器","date":"2022-03-14T03:08:02.000Z","updated":"2022-03-27T08:26:05.465Z","comments":true,"path":"api/articles/定点运算器.json","keywords":null,"cover":[],"text":"$\\qquad$由前几节的内容我们知道计算机中的各类算术运算都可以由最基本的定点加法与移位运算迭代实现，那么我们只要将逻辑运算、移位运算、各种算术运算的数字逻辑电路实现集成在一起就可以构成CPU中的运算器。运算器具体可以分为定点运算部件和浮点运算部件，本节主要介绍又称为算术逻辑运...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"计算机组成原理","slug":"计算机组成原理","count":8,"path":"api/categories/计算机组成原理.json"}],"tags":[{"name":"notes","slug":"notes","count":13,"path":"api/tags/notes.json"}],"author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}}},{"title":"「Section 7」寻址方式","uid":"d8805cb4c52676259ff97b6383bdfab8","slug":"寻址方式","date":"2022-03-23T01:04:09.000Z","updated":"2022-03-29T12:58:20.381Z","comments":true,"path":"api/articles/寻址方式.json","keywords":null,"cover":[],"text":" 寻址方式：（由硬件）确定本条指令的操作数地址，以及下一条指令地址的方法 指令寻址：指令在主存中是按顺序存放的，我们确定下一条指令在主存中的地址 顺序寻址：PC永远指向下一条指令的地址，取完指令后自动自增指向下一条待执行指令地址 跳跃寻址：当前指令将目标指令的地址置入PC中从而实...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"计算机组成原理","slug":"计算机组成原理","count":8,"path":"api/categories/计算机组成原理.json"}],"tags":[{"name":"notes","slug":"notes","count":13,"path":"api/tags/notes.json"}],"author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}}},{"title":"「Section 6」指令系统","uid":"03afcc3b07031cb1f7cc8d70de23254b","slug":"指令系统","date":"2022-03-16T01:57:48.000Z","updated":"2022-03-17T08:56:15.319Z","comments":true,"path":"api/articles/指令系统.json","keywords":null,"cover":[],"text":"$\\qquad\\quad$α. 指令系统概述 $\\qquad\\quad$β. 指令格式 $\\qquad\\quad$γ. 操作数类型 α 指令系统概述 现代冯·诺伊曼计算机结构框图是以存储器为中心，计算机的工作过程就是循环往复地取指令、分析指令、执行指令的过程。 一些概念 计算机指...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"计算机组成原理","slug":"计算机组成原理","count":8,"path":"api/categories/计算机组成原理.json"}],"tags":[{"name":"notes","slug":"notes","count":13,"path":"api/tags/notes.json"}],"author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}}},{"title":"「Section 8」控制器","uid":"9c235338e8419467c57a9cf3dae4161a","slug":"控制器","date":"2022-04-02T11:10:12.000Z","updated":"2022-04-02T13:25:16.028Z","comments":true,"path":"api/articles/控制器.json","keywords":null,"cover":[],"text":" 控制器是整个计算机的指挥中心，协调计算机的各部件进行工作。其实质工作就是解释程序，每次从存储器中读取一条指令，经过分析译码产生一串操作命令，再发给各功能部件，控制各部件的动作，以实现指令和程序的功能。（取指令→分析指令→执行指令→取指令） 总线（bus） 构成 AB（单向）：地...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"计算机组成原理","slug":"计算机组成原理","count":8,"path":"api/categories/计算机组成原理.json"}],"tags":[{"name":"notes","slug":"notes","count":13,"path":"api/tags/notes.json"}],"author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}}},{"title":"「Section 1」数据格式","uid":"b84d0f0ccbd1fa272bb501c55b437830","slug":"数据格式","date":"2022-02-24T09:03:45.000Z","updated":"2022-03-21T14:27:22.166Z","comments":true,"path":"api/articles/数据格式.json","keywords":null,"cover":[],"text":" 机器数：数值数据在计算机中的表现形式称为机器数。 表示范围受计算机字长的限制 机器数的符号位必须被数值化为0和1 机器数的小数点是用规定的隐含方式来表达的 ⚠️ 计算机硬件无法区分有符号（signed ）与无符号（unsigned ）数，只能由程序指令加以区分 小数点的表示方法 ...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"计算机组成原理","slug":"计算机组成原理","count":8,"path":"api/categories/计算机组成原理.json"}],"tags":[{"name":"notes","slug":"notes","count":13,"path":"api/tags/notes.json"}],"author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}}},{"title":"「Section 2」浮点数表示","uid":"2aa32c1dad7cbbce692f6b1b0a062627","slug":"浮点数表示","date":"2022-03-01T08:43:17.000Z","updated":"2022-03-03T08:04:11.531Z","comments":true,"path":"api/articles/浮点数表示.json","keywords":null,"cover":[],"text":" 浮点数：顾名思义，小数点的位置可以浮动，采用了科学记数法的思想 任意一个二进制数都可以用阶码$E$、尾数$M$唯一地表示为$$N&#x3D;2^E\\times M&#x3D;2^{\\pm e}\\times\\pm 0.m$$⚠️正常情况下的尾数$M$包括符号位 阶码$E$决定了数据...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"计算机组成原理","slug":"计算机组成原理","count":8,"path":"api/categories/计算机组成原理.json"}],"tags":[{"name":"notes","slug":"notes","count":13,"path":"api/tags/notes.json"}],"author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}}},{"title":"「Section 3」补码加减运算方法","uid":"916fffb6f0cf37494d0f7af19c9c80e4","slug":"补码加减运算方法","date":"2022-03-04T09:46:00.000Z","updated":"2022-03-14T12:23:06.655Z","comments":true,"path":"api/articles/补码加减运算方法.json","keywords":null,"cover":null,"text":"$\\qquad$目前计算机中的数据普遍是用补码存储的，因为补码具有简单的加减法规则，运算简单，易于实现，而且符号位可以和数值位一起参与运算。 $\\qquad\\quad$α. 补码规则运算 $\\qquad\\quad$β. 溢出检测 $\\qquad\\quad$γ. 机器数的移位运算 ...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"计算机组成原理","slug":"计算机组成原理","count":8,"path":"api/categories/计算机组成原理.json"}],"tags":[{"name":"notes","slug":"notes","count":13,"path":"api/tags/notes.json"}],"author":{"name":"Starlit Rover","slug":"blog-author","avatar":"https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQWu4nWh5NV26rlAS5lR23iaundn5IVlV3EpYGNAdtnMObooQnk","link":"/","description":"Stroll in the starlit firmament~","socials":{"github":"https://github.com/StarlitRover","twitter":"https://twitter.com/Starlit_Rover","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"steam":{"icon":"/images/aurora/steam.svg","link":"https://steamcommunity.com/id/starlitrover/"}}}}}]}